{"id":"../../../node_modules/one-micro-patient/src/patientmodal.tsx","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/tsconfig.json","includedInParent":true,"mtime":1569955866849},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/package.json","includedInParent":true,"mtime":1569955866847},{"name":"react","loc":{"line":13,"column":33},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/src/patientmodal.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react/index.js"},{"name":"antd/lib/modal","loc":{"line":14,"column":38},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/src/patientmodal.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/modal/index.js"},{"name":"antd/lib/table","loc":{"line":15,"column":38},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/src/patientmodal.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/table/index.js"},{"name":"one-core","loc":{"line":16,"column":25},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/src/patientmodal.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-core/index.ts"},{"name":"react-redux","loc":{"line":17,"column":28},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-patient/src/patientmodal.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react-redux/es/index.js"}],"generated":{"js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar modal_1 = __importDefault(require(\"antd/lib/modal\"));\nvar table_1 = __importDefault(require(\"antd/lib/table\"));\nvar one_core_1 = require(\"one-core\");\nvar react_redux_1 = require(\"react-redux\");\nfunction sortTime(date) {\n    if (date) {\n        var dateinfo = new Date(date);\n        var yyyy = dateinfo.getFullYear();\n        var mm = ((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n        var dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n        return (mm + \"-\" + dd + \"-\" + yyyy);\n    }\n}\nexports.PatientModal = function () {\n    var dispatch = react_redux_1.useDispatch();\n    var patientdetails = react_redux_1.useSelector(function (state) { return (state.patient || {}); });\n    var patientdrawer = react_redux_1.useSelector(function (state) { return (state.patientdrawer); });\n    var patienttabledata = [];\n    var patients = [];\n    if (patientdetails.patientdetails) {\n        patients = patientdetails.patientdetails;\n    }\n    if (patients) {\n        patients.map(function (pdata) {\n            pdata.PatientID.map(function (mrninfo) {\n                var adde = one_core_1.array(pdata.Addresses).filter(function (a) { return (a.Type === 'Permanent'); });\n                var addr = adde.length > 0 ? adde[0] : \"\";\n                var zipcode = addr.PostalCode ? addr.PostalCode : \"\";\n                if (mrninfo.Type === \"MRN\") {\n                    var info = {\n                        // fname :pdata.FirstName,\n                        fname: pdata.FirstName ? pdata.FirstName : \"\",\n                        lname: pdata.LastName ? pdata.LastName : \"\",\n                        gender: pdata.Sex ? pdata.Sex : \"\",\n                        name: pdata.Name ? pdata.Name : \"\",\n                        dob: pdata.DateOfBirth ? sortTime(pdata.DateOfBirth) : \"\",\n                        mrn: mrninfo.ID ? mrninfo.ID : \"\",\n                        zipcode: zipcode\n                    };\n                    patienttabledata.push(info);\n                }\n            });\n        });\n    }\n    function sortFunction(a, b) {\n        var keyA = a.name.toLowerCase();\n        var keyB = b.name.toLowerCase();\n        if (keyA < keyB)\n            return -1;\n        if (keyA > keyB)\n            return 1;\n        return 0;\n    }\n    patienttabledata.sort(sortFunction);\n    console.log(\"----The data1----\", patienttabledata);\n    var column = [\n        {\n            title: \"MRN\",\n            dataIndex: \"mrn\",\n            key: \"mrn\"\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            key: \"name\"\n        },\n        {\n            title: \"Date of Birth\",\n            dataIndex: \"dob\",\n            key: \"dob\"\n        },\n        {\n            title: \"Postal Code\",\n            dataIndex: \"zipcode\",\n            key: \"zipcode\"\n        }\n    ];\n    return (React.createElement(\"div\", null,\n        React.createElement(modal_1.default, { title: \"Patient Details\", width: \"150\", visible: patientdrawer && patientdrawer.visible, footer: null, \n            // onOk= { (event) => {\n            //   dispatch({\n            //     type:\"one-patient-drawer\",\n            //     payload:{\n            //       visible:false\n            //     }\n            //   })\n            // }\n            // }\n            onCancel: function (event) {\n                dispatch({\n                    type: \"one-patient-drawer\",\n                    payload: {\n                        visible: false\n                    }\n                });\n            } },\n            React.createElement(table_1.default, { columns: column, dataSource: patienttabledata, size: \"small\", rowClassName: function (record) { return 'patient_select_table'; }, onRowClick: function (event) {\n                    //console.log(\"----The event occured----- \",event)\n                    var index = patients.findIndex(function (pdetails) { return pdetails.Name === event.name; });\n                    dispatch({\n                        type: 'one-patients-select',\n                        payload: patients[index],\n                    });\n                    dispatch({\n                        type: \"one-patient-drawer\",\n                        payload: {\n                            visible: false\n                        }\n                    });\n                } }))));\n};\n"},"sourceMaps":{"js":{"version":3,"file":"patientmodal.js","sourceRoot":"","sources":["../../../node_modules/one-micro-patient/src/patientmodal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as  React from 'react';\nimport  Modal  from 'antd/lib/modal';\nimport Table from 'antd/lib/table';\nimport { array } from 'one-core';\nimport {useDispatch, useSelector}  from 'react-redux';\n\nfunction sortTime(date:any)\n{\n    if(date)\n  {\n      let dateinfo = new Date(date);\n      let yyyy = dateinfo.getFullYear();\n      let mm =((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n      let dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n      return (mm + \"-\" + dd + \"-\" + yyyy);\n  }\n}\n\nexport const PatientModal = () => {\n\n  const dispatch = useDispatch();\n  const  patientdetails = useSelector((state: any) => ( state.patient || {}));\n\n  const patientdrawer = useSelector((state:any) => (state.patientdrawer));\n\n let patienttabledata:any = [];\n let patients:any=[];\n if(patientdetails.patientdetails)\n {\n patients=patientdetails.patientdetails;\n\n}\nif(patients)\n{\n  patients.map((pdata:any)=>{\n      pdata.PatientID.map((mrninfo:any)=>{\n        let adde= array(pdata.Addresses).filter((a: any) => (\n          a.Type === 'Permanent'\n           ));\n           let addr =adde.length>0?adde[0]:\"\";\n           let zipcode =addr.PostalCode?addr.PostalCode:\"\";\n      if(mrninfo.Type===\"MRN\") {\n        const info = {\n          // fname :pdata.FirstName,\n          fname: pdata.FirstName ? pdata.FirstName : \"\",\n          lname:pdata.LastName ? pdata.LastName : \"\",\n          gender:pdata.Sex ? pdata.Sex : \"\",\n          name:pdata.Name ? pdata.Name : \"\",\n          dob:pdata.DateOfBirth ? sortTime(pdata.DateOfBirth) : \"\",\n          mrn: mrninfo.ID ? mrninfo.ID : \"\",\n          zipcode:zipcode\n        }\n        patienttabledata.push(info)\n      }\n      })\n  })\n}\n\nfunction sortFunction(a: any, b: any)\n{ \n    var keyA = a.name.toLowerCase();\n    var keyB = b.name.toLowerCase();\n    if (keyA < keyB)\n    return -1;\n  if (keyA > keyB)\n    return 1;\n  return 0;\n}\n  patienttabledata.sort(sortFunction)\nconsole.log(\"----The data1----\",patienttabledata);\nconst column = [\n  {\n      title: \"MRN\",\n      dataIndex: \"mrn\",\n      key: \"mrn\"\n  },\n  {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n  },\n  {\n      title:\"Date of Birth\",\n      dataIndex: \"dob\",\n      key:\"dob\"\n  },\n  {\n    title:\"Postal Code\",\n    dataIndex: \"zipcode\",\n    key:\"zipcode\"\n}\n]\n\n  return (\n    <div>\n\n    <Modal\n    title=\"Patient Details\"\n        width={\"150\"}\n       visible={patientdrawer && patientdrawer.visible}\n       footer={null}\n        // onOk= { (event) => {\n        //   dispatch({\n        //     type:\"one-patient-drawer\",\n        //     payload:{\n        //       visible:false\n        //     }\n        //   })\n        // }\n        // }\n\n        onCancel= { (event) => {\n          dispatch({\n            type:\"one-patient-drawer\",\n            payload:{\n              visible:false\n            }\n          })\n        }\n        }\n       >\n       <Table columns={column} dataSource={patienttabledata} size=\"small\" rowClassName={(record) => 'patient_select_table'}\n       onRowClick={(event:string)=>{\n         //console.log(\"----The event occured----- \",event)\n        let index = patients.findIndex((pdetails: any) => pdetails.Name === event.name);\n          dispatch({\n            type: 'one-patients-select',\n            payload: patients[index],\n\n          })\n         dispatch({\n           type:\"one-patient-drawer\",\n           payload:{\n             visible:false\n           }\n         })\n       }} />\n\n    </Modal>\n    </div>\n  )\n}"]}},"error":null,"hash":"adb4268dddd74d64fd304d78545e4238","cacheData":{"env":{}}}
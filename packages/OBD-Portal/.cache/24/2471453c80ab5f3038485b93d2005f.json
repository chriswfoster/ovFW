{"id":"../../../node_modules/unch-app/src/store/pcp/src/pcp.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1570193308535},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Types;\n(function (Types) {\n    Types[\"PCPSELECT\"] = \"pcp-select\";\n    Types[\"PCPCLEAR\"] = \"pcp-clear\";\n})(Types = exports.Types || (exports.Types = {}));\n;\nvar initial = {};\nexports.pcpreducer = function (context) {\n    var log = context.log;\n    return function (state, action) {\n        if (state === void 0) { state = initial; }\n        log.debug('one-state-patients-pcp', 'reducer', {\n            action: action,\n        });\n        var updated = state;\n        var type = action.type, payload = action.payload;\n        var pcp = payload;\n        switch (type) {\n            case Types.PCPSELECT:\n                updated = pcp;\n                break;\n            case Types.PCPCLEAR:\n                updated = {};\n                break;\n        }\n        return updated;\n    };\n};\n"},"sourceMaps":{"js":{"version":3,"file":"pcp.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/store/pcp/src/pcp.ts"],"names":[],"mappings":";;AACA,IAAkB,KAGjB;AAHD,WAAkB,KAAK;IACnB,iCAAwB,CAAA;IACxB,+BAAsB,CAAA;AAC1B,CAAC,EAHiB,KAAK,GAAL,aAAK,KAAL,aAAK,QAGtB;AAAA,CAAC;AAMF,IAAM,OAAO,GAAQ,EAAE,CAAC;AAEX,QAAA,UAAU,GAAG,UAAC,OAAY;IAC3B,IAAA,iBAAG,CAAa;IACxB,OAAO,UAAC,KAA8B,EAAC,MAAqB;QAApD,sBAAA,EAAA,eAA8B;QAClC,GAAG,CAAC,KAAK,CACL,wBAAwB,EACxB,SAAS,EAAE;YACP,MAAM,QAAA;SACT,CACJ,CAAC;QAEF,IAAI,OAAO,GAAG,KAAK,CAAC;QACZ,IAAA,kBAAI,EAAE,wBAAO,CAAY;QACjC,IAAI,GAAG,GAAC,OAAO,CAAA;QACf,QAAQ,IAAI,EAAE;YACV,KAAK,KAAK,CAAC,SAAS;gBAChB,OAAO,GAAG,GAAG,CAAC;gBACd,MAAM;YAEV,KAAK,KAAK,CAAC,QAAQ;gBACf,OAAO,GAAG,EAET,CAAC;gBACF,MAAM;SAEb;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAA;AACL,CAAC,CAAA","sourcesContent":["\nexport const enum Types {\n    PCPSELECT = 'pcp-select',\n    PCPCLEAR = 'pcp-clear',\n};\n\nexport interface Action<T, P = any> {\n    type: T,\n    payload: P,\n}\nconst initial: any = {};\n\nexport const pcpreducer = (context: any) => {\n    const { log } = context;\n    return (state:typeof initial = initial,action: Action<Types>) => {\n        log.debug(\n            'one-state-patients-pcp',\n            'reducer', {\n                action,\n            }\n        );\n\n        let updated = state;\n        const { type, payload } = action;\n        let pcp=payload\n        switch (type) {\n            case Types.PCPSELECT:\n                updated = pcp;\n                break;\n\n            case Types.PCPCLEAR:\n                updated = {\n\n                };\n                break;\n\n        }\n        return updated;\n    }\n}\n"]}},"error":null,"hash":"b77ec8c3399549621be1290250fb41ca","cacheData":{"env":{}}}
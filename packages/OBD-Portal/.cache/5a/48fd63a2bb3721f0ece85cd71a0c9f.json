{"id":"../../../node_modules/unch-app/src/store/calleridentify/src/reducer.ts","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1569552466469},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/package.json","includedInParent":true,"mtime":1569958537334}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Types;\n(function (Types) {\n    Types[\"CALLERPROVIDER\"] = \"caller-provider\";\n    Types[\"CALLERPATIENT\"] = \"caller-patient\";\n})(Types = exports.Types || (exports.Types = {}));\n;\nexports.calleridentify = function (context) {\n    var log = context.log;\n    return function (state, action) {\n        log.debug('one-caller-identify', 'reducer', {\n            action: action,\n        });\n        var updated = {};\n        var type = action.type, payload = action.payload;\n        switch (type) {\n            case Types.CALLERPATIENT:\n                updated =\n                    payload;\n                break;\n            case Types.CALLERPROVIDER:\n                updated =\n                    payload;\n                break;\n        }\n        return updated;\n    };\n};\n"},"sourceMaps":{"js":{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/store/calleridentify/src/reducer.ts"],"names":[],"mappings":";;AACA,IAAkB,KAKjB;AALD,WAAkB,KAAK;IACnB,2CAAiC,CAAA;IACjC,yCAA+B,CAAA;AAGnC,CAAC,EALiB,KAAK,GAAL,aAAK,KAAL,aAAK,QAKtB;AAAA,CAAC;AASW,QAAA,cAAc,GAAG,UAAC,OAAY;IAC/B,IAAA,iBAAG,CAAa;IACxB,OAAO,UAAC,KAAS,EAAE,MAAqB;QACpC,GAAG,CAAC,KAAK,CACL,qBAAqB,EACrB,SAAS,EAAE;YACP,MAAM,QAAA;SACT,CACJ,CAAC;QAEF,IAAI,OAAO,GAAG,EAAE,CAAC;QACT,IAAA,kBAAI,EAAE,wBAAO,CAAY;QAGjC,QAAQ,IAAI,EAAE;YAEV,KAAK,KAAK,CAAC,aAAa;gBAChB,OAAO;oBACH,OAAO,CAAA;gBAEf,MAAM;YACV,KAAK,KAAK,CAAC,cAAc;gBACrB,OAAO;oBACH,OAAO,CAAA;gBACX,MAAM;SACb;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAA;AACL,CAAC,CAAA","sourcesContent":["\nexport const enum Types {\n    CALLERPROVIDER= 'caller-provider',\n    CALLERPATIENT= 'caller-patient',\n\n\n};\n\nexport interface Action<T, P = any> {\n    type: T,\n    payload: P,\n}\n\n\n\nexport const calleridentify = (context: any) => {\n    const { log } = context;\n    return (state:any, action: Action<Types>) => {\n        log.debug(\n            'one-caller-identify',\n            'reducer', {\n                action,\n            }\n        );\n\n        let updated = {};\n        const { type, payload } = action;\n\n\n        switch (type) {\n\n            case Types.CALLERPATIENT:\n                    updated =\n                        payload\n\n                break;\n            case Types.CALLERPROVIDER:\n                updated =\n                    payload\n                break;\n        }\n        return updated;\n    }\n}\n"]}},"error":null,"hash":"2cd9e007a71dcdf6e9c0590154c57ad5","cacheData":{"env":{}}}
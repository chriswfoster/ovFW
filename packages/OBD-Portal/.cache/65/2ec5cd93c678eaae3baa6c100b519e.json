{"id":"../../../node_modules/unch-app/src/components/Audience/index.tsx","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1570193308535},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170},{"name":"react","loc":{"line":24,"column":35},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/index.tsx","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/react/index.js"},{"name":"antd","loc":{"line":25,"column":21},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/index.tsx","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/antd/es/index.js"},{"name":"./AudienceComponents/FTP","loc":{"line":26,"column":36},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/index.tsx","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/AudienceComponents/FTP.tsx"},{"name":"./AudienceComponents/SharedDrive","loc":{"line":27,"column":44},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/index.tsx","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/components/Audience/AudienceComponents/SharedDrive.tsx"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importStar(require(\"react\"));\nvar antd_1 = require(\"antd\");\nvar FTP_1 = __importDefault(require(\"./AudienceComponents/FTP\"));\nvar SharedDrive_1 = __importDefault(require(\"./AudienceComponents/SharedDrive\"));\nvar Audience = function () {\n    ///////// Hooks /////////\n    var _a = react_1.useState(false), visible = _a[0], setVisible = _a[1];\n    var _b = react_1.useState(false), manualVisible = _b[0], setManualVisible = _b[1];\n    var _c = react_1.useState(false), showNewAudience = _c[0], setShowNewAudience = _c[1];\n    //////////////////\n    ////////// Modal Methods //////////\n    var showModal = function () {\n        setVisible(true);\n    };\n    var handleOk = function (e) {\n        setVisible(false);\n    };\n    var handleCancel = function (e) {\n        setVisible(false);\n    };\n    ////////////////////\n    ////////// Manual Entry Modal Methods //////////\n    var manualModal = function () {\n        setManualVisible(true);\n    };\n    var manualModalOk = function (e) {\n        setManualVisible(false);\n    };\n    var manualModalCancel = function (e) {\n        setManualVisible(false);\n    };\n    ////////////////////\n    ////////// Collapse Methods //////////\n    function callback(key) {\n        console.log(key);\n    }\n    ////////////////////\n    ////////// New Audience Methods //////////\n    var campaignRowSelection = {\n        onChange: function (selectedRowKeys, selectedRows) {\n            console.log(\"selectedRowKeys: \" + selectedRowKeys, 'selectedRows: ', selectedRows);\n        },\n        getCheckboxProps: function (record) { return ({\n            disabled: record.name === 'Disabled User',\n            name: record.name,\n        }); },\n    };\n    ////////////////////\n    var props = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange: function (info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                antd_1.message.success(info.file.name + \" file uploaded successfully\");\n            }\n            else if (info.file.status === 'error') {\n                antd_1.message.error(info.file.name + \" file upload failed.\");\n            }\n        },\n    };\n    ////////// Campaign Data //////////\n    var campaignColumns = [\n        {\n            title: 'Audience Name',\n            dataIndex: 'audienceName',\n        },\n        {\n            title: \"Campaign Status\",\n            dataIndex: \"status\"\n        }\n    ];\n    var campaignData = [\n        {\n            key: '1',\n            audienceName: 'Audience 1',\n            status: (react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(antd_1.Icon, { type: \"play-circle\", theme: \"twoTone\", twoToneColor: \"#52c41a\", style: { paddingRight: \"5px\" } }),\n                \"Running\"))\n        },\n        {\n            key: '2',\n            audienceName: 'Audience 2',\n            status: (react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(antd_1.Icon, { type: \"pause-circle\", theme: \"twoTone\", style: { paddingRight: \"5px\" } }),\n                \"Paused\"))\n        },\n        {\n            key: '3',\n            audienceName: 'Audience 3',\n            status: (react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(antd_1.Icon, { type: \"close-circle\", theme: \"twoTone\", twoToneColor: \"#eb2f96\", style: { paddingRight: \"5px\" } }),\n                \"Stopped\"))\n        },\n        {\n            key: '4',\n            audienceName: 'Audience 4'\n        },\n        {\n            key: '5',\n            audienceName: 'Audience 5'\n        },\n    ];\n    ////////////////////\n    ///////////// Columns and Data for Audience ///////////////\n    var dataSource = [\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'John',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Jacob',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Kevin',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Matt',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Dave',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'John',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Jacob',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Kevin',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Matt',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Dave',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n    ];\n    var columns = [\n        {\n            title: 'First Name',\n            dataIndex: 'firstName',\n        },\n        {\n            title: 'Last Name',\n            dataIndex: 'lastName',\n        },\n        {\n            title: 'Number',\n            dataIndex: 'number',\n        }\n        // {\n        //     title: 'Type',\n        //     dataIndex: 'type',\n        // },\n        // {\n        //     title: 'Status',\n        //     dataIndex: 'status',\n        // },\n    ];\n    ////////////////////////////\n    var TabPane = antd_1.Tabs.TabPane;\n    var Panel = antd_1.Collapse.Panel;\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(antd_1.Table, { columns: columns, dataSource: dataSource, pagination: false }),\n        react_1.default.createElement(antd_1.Row, null,\n            react_1.default.createElement(antd_1.Col, { span: 7, style: { paddingBottom: \"10px\" } },\n                react_1.default.createElement(antd_1.Upload, __assign({}, props),\n                    react_1.default.createElement(antd_1.Button, { type: \"primary\", icon: \"upload\", size: \"default\", style: { height: \"40px\" } }, \"Upload Form\"))),\n            react_1.default.createElement(antd_1.Col, { span: 7 },\n                react_1.default.createElement(antd_1.Button, { type: \"primary\", icon: \"form\", size: \"default\", style: { height: \"40px\" }, onClick: manualModal }, \"Manual Entry\"))),\n        react_1.default.createElement(antd_1.Collapse, { onChange: callback },\n            react_1.default.createElement(Panel, { header: \"FTP\", key: \"1\" },\n                react_1.default.createElement(FTP_1.default, null)),\n            react_1.default.createElement(Panel, { header: \"Network Drive\", key: \"2\" },\n                react_1.default.createElement(SharedDrive_1.default, null)))));\n};\nexports.default = Audience;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/components/Audience/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AACxC,6BAAmI;AACnI,iEAA0C;AAE1C,iFAA0D;AAE1D,IAAM,QAAQ,GAAG;IAEb,yBAAyB;IACnB,IAAA,4BAAuC,EAAtC,eAAO,EAAE,kBAA6B,CAAA;IACvC,IAAA,4BAAmD,EAAlD,qBAAa,EAAE,wBAAmC,CAAA;IACnD,IAAA,4BAAuD,EAAtD,uBAAe,EAAE,0BAAqC,CAAA;IAE7D,kBAAkB;IAElB,mCAAmC;IACnC,IAAM,SAAS,GAAG;QACd,UAAU,CAAC,IAAI,CAAC,CAAA;IACpB,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAC,CAAM;QACpB,UAAU,CAAC,KAAK,CAAC,CAAA;IACrB,CAAC,CAAC;IAEF,IAAM,YAAY,GAAG,UAAC,CAAM;QACxB,UAAU,CAAC,KAAK,CAAC,CAAA;IACrB,CAAC,CAAC;IACF,oBAAoB;IAEpB,gDAAgD;IAChD,IAAM,WAAW,GAAG;QAChB,gBAAgB,CAAC,IAAI,CAAC,CAAA;IAC1B,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,UAAC,CAAM;QACzB,gBAAgB,CAAC,KAAK,CAAC,CAAA;IAC3B,CAAC,CAAC;IAEF,IAAM,iBAAiB,GAAG,UAAC,CAAM;QAC7B,gBAAgB,CAAC,KAAK,CAAC,CAAA;IAC3B,CAAC,CAAC;IACF,oBAAoB;IAEpB,sCAAsC;IACtC,SAAS,QAAQ,CAAC,GAAG;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,oBAAoB;IAGpB,0CAA0C;IAC1C,IAAM,oBAAoB,GAAG;QACzB,QAAQ,EAAE,UAAC,eAAe,EAAE,YAAY;YACpC,OAAO,CAAC,GAAG,CAAC,sBAAoB,eAAiB,EAAE,gBAAgB,EAAE,YAAY,CAAC,CAAC;QACvF,CAAC;QACD,gBAAgB,EAAE,UAAA,MAAM,IAAI,OAAA,CAAC;YACzB,QAAQ,EAAE,MAAM,CAAC,IAAI,KAAK,eAAe;YACzC,IAAI,EAAE,MAAM,CAAC,IAAI;SACpB,CAAC,EAH0B,CAG1B;KACL,CAAC;IACF,oBAAoB;IAEpB,IAAM,KAAK,GAAG;QACV,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,kDAAkD;QAC1D,OAAO,EAAE;YACL,aAAa,EAAE,oBAAoB;SACtC;QACD,QAAQ,YAAC,IAAI;YACT,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;gBAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzC;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;gBAC7B,cAAO,CAAC,OAAO,CAAI,IAAI,CAAC,IAAI,CAAC,IAAI,gCAA6B,CAAC,CAAC;aACnE;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;gBACrC,cAAO,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,CAAC,IAAI,yBAAsB,CAAC,CAAC;aAC1D;QACL,CAAC;KACJ,CAAC;IAGF,mCAAmC;IACnC,IAAM,eAAe,GAAG;QACpB;YACI,KAAK,EAAE,eAAe;YACtB,SAAS,EAAE,cAAc;SAC5B;QACD;YACI,KAAK,EAAE,iBAAiB;YACxB,SAAS,EAAE,QAAQ;SACtB;KACJ,CAAC;IAEF,IAAM,YAAY,GAAG;QACjB;YACI,GAAG,EAAE,GAAG;YACR,YAAY,EAAE,YAAY;YAC1B,MAAM,EAAE,CACJ;gBACI,8BAAC,WAAI,IAAC,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,SAAS,EAAC,YAAY,EAAC,SAAS,EAAC,KAAK,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,GAAI;0BAEhG,CACT;SACJ;QACD;YACI,GAAG,EAAE,GAAG;YACR,YAAY,EAAE,YAAY;YAC1B,MAAM,EAAE,CACJ;gBACI,8BAAC,WAAI,IAAC,IAAI,EAAC,cAAc,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,GAAI;yBAE1E,CACT;SACJ;QACD;YACI,GAAG,EAAE,GAAG;YACR,YAAY,EAAE,YAAY;YAC1B,MAAM,EAAE,CACJ;gBACI,8BAAC,WAAI,IAAC,IAAI,EAAC,cAAc,EAAC,KAAK,EAAC,SAAS,EAAC,YAAY,EAAC,SAAS,EAAC,KAAK,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,GAAI;0BAEjG,CACT;SACJ;QACD;YACI,GAAG,EAAE,GAAG;YACR,YAAY,EAAE,YAAY;SAC7B;QACD;YACI,GAAG,EAAE,GAAG;YACR,YAAY,EAAE,YAAY;SAC7B;KACJ,CAAC;IACF,oBAAoB;IAIpB,2DAA2D;IAC3D,IAAM,UAAU,GAAG;QACf;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;QACD;YACI,MAAM,EAAE,gBAAgB;YACxB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,aAAa;SACxB;KACJ,CAAC;IAEF,IAAM,OAAO,GAAG;QACZ;YACI,KAAK,EAAE,YAAY;YACnB,SAAS,EAAE,WAAW;SACzB;QACD;YACI,KAAK,EAAE,WAAW;YAClB,SAAS,EAAE,UAAU;SACxB;QACD;YACI,KAAK,EAAE,QAAQ;YACf,SAAS,EAAE,QAAQ;SACtB;QACD,IAAI;QACJ,qBAAqB;QACrB,yBAAyB;QACzB,KAAK;QACL,IAAI;QACJ,uBAAuB;QACvB,2BAA2B;QAC3B,KAAK;KACR,CAAC;IACF,4BAA4B;IAEpB,IAAA,6BAAO,CAAU;IACjB,IAAA,6BAAK,CAAc;IAE3B,OAAO,CACH;QACI,8BAAC,YAAK,IAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,GAAI;QACtE,8BAAC,UAAG;YACA,8BAAC,UAAG,IAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE;gBAC1C,8BAAC,aAAM,eAAK,KAAK;oBACb,8BAAC,aAAM,IACH,IAAI,EAAC,SAAS,EACd,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,kBAGxB,CACA,CACP;YACN,8BAAC,UAAG,IAAC,IAAI,EAAE,CAAC;gBACR,8BAAC,aAAM,IACH,IAAI,EAAC,SAAS,EACd,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EACzB,OAAO,EAAE,WAAW,mBAGf,CACP,CACJ;QACN,8BAAC,eAAQ,IAAC,QAAQ,EAAE,QAAQ;YACxB,8BAAC,KAAK,IAAC,MAAM,EAAC,KAAK,EAAC,GAAG,EAAC,GAAG;gBACvB,8BAAC,aAAG,OAAG,CACH;YACR,8BAAC,KAAK,IAAC,MAAM,EAAC,eAAe,EAAC,GAAG,EAAC,GAAG;gBACjC,8BAAC,qBAAW,OAAG,CACX,CACD,CAwOR,CACV,CAAA;AACL,CAAC,CAAA;AAED,kBAAe,QAAQ,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Button, Input, Icon, Modal, Row, Col, Tabs, Upload, message, Collapse, Divider, Menu, Dropdown, Tabs } from 'antd';\nimport FTP from \"./AudienceComponents/FTP\"\nimport AddColumns from \"./AudienceComponents/AddColumns\"\nimport SharedDrive from \"./AudienceComponents/SharedDrive\"\n\nconst Audience = () => {\n\n    ///////// Hooks /////////\n    const [visible, setVisible] = useState(false)\n    const [manualVisible, setManualVisible] = useState(false)\n    const [showNewAudience, setShowNewAudience] = useState(false)\n\n    //////////////////\n\n    ////////// Modal Methods //////////\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = (e: any) => {\n        setVisible(false)\n    };\n\n    const handleCancel = (e: any) => {\n        setVisible(false)\n    };\n    ////////////////////\n\n    ////////// Manual Entry Modal Methods //////////\n    const manualModal = () => {\n        setManualVisible(true)\n    };\n\n    const manualModalOk = (e: any) => {\n        setManualVisible(false)\n    };\n\n    const manualModalCancel = (e: any) => {\n        setManualVisible(false)\n    };\n    ////////////////////\n\n    ////////// Collapse Methods //////////\n    function callback(key) {\n        console.log(key);\n    }\n    ////////////////////\n\n\n    ////////// New Audience Methods //////////\n    const campaignRowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        },\n        getCheckboxProps: record => ({\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\n            name: record.name,\n        }),\n    };\n    ////////////////////\n\n    const props = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n\n    ////////// Campaign Data //////////\n    const campaignColumns = [\n        {\n            title: 'Audience Name',\n            dataIndex: 'audienceName',\n        },\n        {\n            title: \"Campaign Status\",\n            dataIndex: \"status\"\n        }\n    ];\n\n    const campaignData = [\n        {\n            key: '1',\n            audienceName: 'Audience 1',\n            status: (\n                <div>\n                    <Icon type=\"play-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style={{ paddingRight: \"5px\" }} />\n                    Running\n                </div>\n            )\n        },\n        {\n            key: '2',\n            audienceName: 'Audience 2',\n            status: (\n                <div>\n                    <Icon type=\"pause-circle\" theme=\"twoTone\" style={{ paddingRight: \"5px\" }} />\n                    Paused\n                </div>\n            )\n        },\n        {\n            key: '3',\n            audienceName: 'Audience 3',\n            status: (\n                <div>\n                    <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" style={{ paddingRight: \"5px\" }} />\n                    Stopped\n                </div>\n            )\n        },\n        {\n            key: '4',\n            audienceName: 'Audience 4'\n        },\n        {\n            key: '5',\n            audienceName: 'Audience 5'\n        },\n    ];\n    ////////////////////\n\n\n\n    ///////////// Columns and Data for Audience ///////////////\n    const dataSource = [\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'John',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Jacob',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Kevin',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Matt',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Dave',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'John',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Jacob',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Kevin',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Matt',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n        {\n            number: \"(214) 842-1337\",\n            firstName: 'Dave',\n            lastName: \"Smith\",\n            type: 'SMS',\n            status: \"Information\"\n        },\n    ];\n\n    const columns = [\n        {\n            title: 'First Name',\n            dataIndex: 'firstName',\n        },\n        {\n            title: 'Last Name',\n            dataIndex: 'lastName',\n        },\n        {\n            title: 'Number',\n            dataIndex: 'number',\n        }\n        // {\n        //     title: 'Type',\n        //     dataIndex: 'type',\n        // },\n        // {\n        //     title: 'Status',\n        //     dataIndex: 'status',\n        // },\n    ];\n    ////////////////////////////\n\n    const { TabPane } = Tabs;\n    const { Panel } = Collapse;\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={dataSource} pagination={false} />\n            <Row>\n                <Col span={7} style={{ paddingBottom: \"10px\" }}>\n                    <Upload {...props}>\n                        <Button\n                            type=\"primary\"\n                            icon=\"upload\"\n                            size=\"default\"\n                            style={{ height: \"40px\" }}\n                        >\n                            Upload Form\n                    </Button>\n                    </Upload>\n                </Col>\n                <Col span={7}>\n                    <Button\n                        type=\"primary\"\n                        icon=\"form\"\n                        size=\"default\"\n                        style={{ height: \"40px\" }}\n                        onClick={manualModal}\n                    >\n                        Manual Entry\n                    </Button>\n                </Col>\n            </Row>\n            <Collapse onChange={callback}>\n                <Panel header=\"FTP\" key=\"1\">\n                    <FTP />\n                </Panel>\n                <Panel header=\"Network Drive\" key=\"2\">\n                    <SharedDrive />\n                </Panel>\n            </Collapse>\n            {/* <Row>\n                <Row type=\"flex\" justify=\"start\" gutter={8}>\n                    <Col span={5} style={{ paddingBottom: \"10px\" }}>\n                        <Button\n                            type=\"primary\"\n                            icon=\"plus\"\n                            size=\"default\"\n                            style={{ height: \"40px\" }}\n                            onClick={showModal}\n                        >\n                            Add A New Audience\n                    </Button>\n                    </Col>\n                    <Col span={8}>\n                        <Button\n                            type=\"danger\"\n                            icon=\"delete\"\n                            size=\"default\"\n                            style={{ height: \"40px\" }}\n                        >\n                            Delete Audience\n                    </Button>\n                    </Col> */}\n            {/* <Col span={5} style={{ paddingBottom: \"10px\" }}>\n                        <Upload {...props}>\n                            <Button\n                                type=\"primary\"\n                                icon=\"upload\"\n                                size=\"default\"\n                                style={{ height: \"40px\" }}\n                            >\n                                Upload Form\n                    </Button>\n                        </Upload>\n                    </Col>\n                    <Col span={5}>\n                        <Button\n                            type=\"primary\"\n                            icon=\"form\"\n                            size=\"default\"\n                            style={{ height: \"40px\" }}\n                            onClick={manualModal}\n                        >\n                            Manual Entry\n                    </Button>\n                    </Col> */}\n            {/* </Row>\n                <Modal\n                    title=\"Manual Audience Entry\"\n                    visible={manualVisible}\n                    onOk={manualModalOk}\n                    onCancel={manualModalCancel}\n                    width=\"55vw\"\n                    bodyStyle={{ height: \"45vh\", overflowY: \"scroll\" }}\n\n                >\n                    <div>\n                        <b>First_Name</b> <Input placeholder=\"Add Column\" size=\"small\" />\n                        <b>Last_Name</b> <Input placeholder=\"Add Column\" size=\"small\" />\n                        <b>Number</b> <Input placeholder=\"Add Column\" size=\"small\" />\n                        <b>Type</b> <Input placeholder=\"Add Column\" size=\"small\" />\n                    </div>\n                </Modal>\n                <Col span={12}>\n                    <Table rowSelection={campaignRowSelection} columns={campaignColumns} dataSource={campaignData} pagination={false} />\n                </Col>\n                <Col span={12}>\n                    <Tabs defaultActiveKey=\"1\" onChange={callback} size=\"large\">\n                        <TabPane tab={\n                            <span>\n                                <Icon type=\"control\" />\n                                Details\n                            </span>\n                        } key=\"1\">\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    flexWrap: \"nowrap\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"stretch\",\n                                    alignContent: \"flex-start\",\n                                    paddingBottom: \"15px\"\n                                }}\n                            >\n                                <span>\n                                    <b>Name of Audience:</b> Audience 1\n                                </span>\n                                <span>\n                                    <b>Created On: </b> 09/20/2019\n                                </span>\n                                <span>\n                                    <b>Created By: </b> Kevin Smith\n                                </span>\n                                <span>\n                                    <b>Current Campaign: </b> BSW_Campaign\n                                </span>\n                                <span>\n                                    <b>Current State: </b> In Progress\n                                </span>\n                            </div>\n                            <Row gutter={12}>\n                                <Col span={5}>\n                                    <Button icon=\"stop\" type=\"danger\">Stop</Button>\n                                </Col>\n                                <Col span={5}>\n                                    <Button icon=\"pause\" type=\"default\">Pause</Button>\n                                </Col>\n                                <Col span={5}>\n                                    <Button icon=\"caret-right\" type=\"primary\">Resume</Button>\n                                </Col>\n                            </Row>\n                            <Divider />\n                            <b>Columns</b>\n                            <p>First_Name</p>\n                            <p>Last_Name</p>\n                            <p>Phone_Number</p>\n                            <p>Type</p>\n                            <Divider />\n                            <b>Uploaded from</b>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    flexWrap: \"nowrap\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"stretch\",\n                                    alignContent: \"flex-start\",\n                                    paddingBottom: \"10px\"\n                                }}\n                            >\n                                <span>\n                                    <b>FTP Domain:</b> domain.ftp.drive\n                                </span>\n                                <span>\n                                    <b>Port: </b> 833\n                                </span>\n                            </div>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    flexWrap: \"nowrap\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"stretch\",\n                                    alignContent: \"flex-start\",\n                                    paddingBottom: \"10px\"\n                                }}\n                            >\n                                <span>\n                                    <b>Network File Path:</b> //filepath/files/folder/csv\n                                </span>\n                            </div>\n                        </TabPane>\n\n                        <TabPane tab={\n                            <span>\n                                <Icon type=\"menu\" />\n                                Dial List\n                            </span>\n                        } key=\"2\">\n                            <Table columns={columns} dataSource={dataSource} pagination={false} />\n                            <b>Add To Dial List</b>\n                            <Row>\n                                <Col span={7} style={{ paddingBottom: \"10px\" }}>\n                                    <Upload {...props}>\n                                        <Button\n                                            type=\"primary\"\n                                            icon=\"upload\"\n                                            size=\"default\"\n                                            style={{ height: \"40px\" }}\n                                        >\n                                            Upload Form\n                    </Button>\n                                    </Upload>\n                                </Col>\n                                <Col span={7}>\n                                    <Button\n                                        type=\"primary\"\n                                        icon=\"form\"\n                                        size=\"default\"\n                                        style={{ height: \"40px\" }}\n                                        onClick={manualModal}\n                                    >\n                                        Manual Entry\n                    </Button>\n                                </Col>\n                            </Row>\n                            <Collapse onChange={callback}>\n                                <Panel header=\"FTP\" key=\"1\">\n                                    <FTP />\n                                </Panel>\n                                <Panel header=\"Network Drive\" key=\"2\">\n                                    <SharedDrive />\n                                </Panel>\n                            </Collapse>\n                        </TabPane>\n\n                        <TabPane tab={\n                            <span>\n                                <Icon type=\"close-circle\" />\n                                Do Not Call List\n                            </span>\n                        } key=\"3\"> */}\n            {/* </TabPane>\n                    </Tabs>\n                </Col>\n            </Row>\n            <Modal\n                title=\"Create A New Audience\"\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width=\"55vw\"\n                bodyStyle={{ height: \"45vh\", overflowY: \"scroll\" }}\n\n            >\n                <div style={{\n                    display: \"flex\",\n                    flexdirection: \"row\",\n                    flexwrap: \"nowrap\",\n                    justifycontent: \"flex-start\",\n                    alignitems: \"center\",\n                    aligncontent: \"center\",\n                    paddingBottom: \"20px\"\n                }}>\n                    Audience Name:  <Input placeholder=\"Campaign Name\" size=\"small\" style={{ width: \"300px\" }} />\n                </div>\n                <Divider />\n                <AddColumns />\n            </Modal> */}\n        </div >\n    )\n}\n\nexport default Audience;\n\n\n\n\n\n\n\n\n\n\n"]}},"error":null,"hash":"3beabb572d2f826fd1f381cfbec99369","cacheData":{"env":{}}}
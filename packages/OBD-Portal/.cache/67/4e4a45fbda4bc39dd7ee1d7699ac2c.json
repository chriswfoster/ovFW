{"id":"../../../node_modules/one-log/src/log.ts","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-log/tsconfig.json","includedInParent":true,"mtime":1569955866838},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-log/package.json","includedInParent":true,"mtime":1569955866838}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Log = /** @class */ (function () {\n    function Log(loggers) {\n        if (loggers === void 0) { loggers = []; }\n        this.loggers = loggers;\n    }\n    Log.prototype.add = function (logger) {\n        this.loggers.push(logger);\n    };\n    Log.prototype.debug = function (title, description, context) {\n        var loggers = this.loggers;\n        for (var _i = 0, loggers_1 = loggers; _i < loggers_1.length; _i++) {\n            var logger = loggers_1[_i];\n            logger.debug(title, description, context);\n        }\n    };\n    Log.prototype.error = function (title, description, context) {\n        var loggers = this.loggers;\n        for (var _i = 0, loggers_2 = loggers; _i < loggers_2.length; _i++) {\n            var logger = loggers_2[_i];\n            logger.error(title, description, context);\n        }\n    };\n    Log.prototype.warn = function (title, description, context) {\n        var loggers = this.loggers;\n        for (var _i = 0, loggers_3 = loggers; _i < loggers_3.length; _i++) {\n            var logger = loggers_3[_i];\n            logger.warn(title, description, context);\n        }\n    };\n    Log.prototype.info = function (title, description, context) {\n        var loggers = this.loggers;\n        for (var _i = 0, loggers_4 = loggers; _i < loggers_4.length; _i++) {\n            var logger = loggers_4[_i];\n            logger.info(title, description, context);\n        }\n    };\n    return Log;\n}());\nexports.Log = Log;\n"},"sourceMaps":{"js":{"version":3,"file":"log.js","sourceRoot":"","sources":["../../../node_modules/one-log/src/log.ts"],"names":[],"mappings":";;AAEA;IAGI,aAAY,OAAsB;QAAtB,wBAAA,EAAA,YAAsB;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,iBAAG,GAAH,UAAI,MAAc;QACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,mBAAK,GAAL,UAAM,KAAa,EAAE,WAAmB,EAAE,OAAa;QAC3C,IAAA,sBAAO,CAAU;QACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAzB,IAAM,MAAM,gBAAA;YACb,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAED,mBAAK,GAAL,UAAM,KAAa,EAAE,WAAmB,EAAE,OAAa;QAC3C,IAAA,sBAAO,CAAU;QACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAzB,IAAM,MAAM,gBAAA;YACb,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAED,kBAAI,GAAJ,UAAK,KAAa,EAAE,WAAmB,EAAE,OAAa;QAC1C,IAAA,sBAAO,CAAU;QACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAzB,IAAM,MAAM,gBAAA;YACb,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;SAC5C;IACL,CAAC;IAED,kBAAI,GAAJ,UAAK,KAAa,EAAE,WAAmB,EAAE,OAAa;QAC1C,IAAA,sBAAO,CAAU;QACzB,KAAqB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAzB,IAAM,MAAM,gBAAA;YACb,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;SAC5C;IACL,CAAC;IACL,UAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,kBAAG","sourcesContent":["import { Logger } from \"one-logger\";\n\nexport class Log implements Logger {\n    private loggers: Logger[];\n\n    constructor(loggers: Logger[] = []) {\n        this.loggers = loggers;\n    }\n\n    add(logger: Logger) {\n        this.loggers.push(logger);\n    }\n\n    debug(title: string, description: string, context?: any): void {\n        const { loggers } = this;\n        for (const logger of loggers) {\n            logger.debug(title, description, context);\n        }\n    }\n\n    error(title: string, description: string, context?: any): void {\n        const { loggers } = this;\n        for (const logger of loggers) {\n            logger.error(title, description, context);\n        }\n    }\n\n    warn(title: string, description: string, context?: any): void {\n        const { loggers } = this;\n        for (const logger of loggers) {\n            logger.warn(title, description, context);\n        }\n    }\n\n    info(title: string, description: string, context?: any): void {\n        const { loggers } = this;\n        for (const logger of loggers) {\n            logger.info(title, description, context);\n        }\n    }\n}\n"]}},"error":null,"hash":"c02b962aa0e381d3c5f2ed18328f7208","cacheData":{"env":{}}}
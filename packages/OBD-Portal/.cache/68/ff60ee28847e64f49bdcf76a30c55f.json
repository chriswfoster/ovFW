{"id":"../../../node_modules/unch-app/src/store/index.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1570193308535},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170},{"name":"redux","loc":{"line":3,"column":22},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/redux/es/redux.js"},{"name":"one-state-interact-voice","loc":{"line":4,"column":41},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/one-state-interact-voice/index.ts"},{"name":"one-state-hotkeys","loc":{"line":5,"column":34},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/one-state-hotkeys/index.ts"},{"name":"../epics","loc":{"line":6,"column":22},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/index.ts"},{"name":"redux-observable","loc":{"line":7,"column":33},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/redux-observable/lib/esm/index.js"},{"name":"../epics/patient","loc":{"line":8,"column":24},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/patient/index.ts"},{"name":"./map","loc":{"line":9,"column":20},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/map.ts"},{"name":"./appointment/src/appointments","loc":{"line":10,"column":29},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/appointment/src/appointments.ts"},{"name":"./referals/src/referals","loc":{"line":11,"column":25},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/referals/src/referals.ts"},{"name":"./drawer","loc":{"line":12,"column":23},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/drawer.ts"},{"name":"./patientdrawer","loc":{"line":13,"column":30},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/patientdrawer.ts"},{"name":"./caller","loc":{"line":14,"column":23},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/caller/index.ts"},{"name":"./pcp","loc":{"line":15,"column":20},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/pcp/index.ts"},{"name":"./calledto","loc":{"line":16,"column":25},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/calledto/index.ts"},{"name":"./calleridentify","loc":{"line":17,"column":31},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/calleridentify/index.ts"},{"name":"./globalsearch","loc":{"line":18,"column":29},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/globalsearch/index.ts"},{"name":"./screenpop","loc":{"line":19,"column":26},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/store/screenpop/index.ts"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar redux_1 = require(\"redux\");\nvar one_state_interact_voice_1 = require(\"one-state-interact-voice\");\nvar one_state_hotkeys_1 = require(\"one-state-hotkeys\");\nvar epics_1 = require(\"../epics\");\nvar redux_observable_1 = require(\"redux-observable\");\nvar patient_1 = require(\"../epics/patient\");\nvar map_1 = require(\"./map\");\nvar appointments_1 = require(\"./appointment/src/appointments\");\nvar referals_1 = require(\"./referals/src/referals\");\nvar drawer_1 = require(\"./drawer\");\nvar patientdrawer_1 = require(\"./patientdrawer\");\nvar caller_1 = require(\"./caller\");\nvar pcp_1 = require(\"./pcp\");\nvar calledto_1 = require(\"./calledto\");\nvar calleridentify_1 = require(\"./calleridentify\");\nvar globalsearch_1 = require(\"./globalsearch\");\nvar screenpop_1 = require(\"./screenpop\");\nvar epicMiddleware = redux_observable_1.createEpicMiddleware();\nexports.build = function (context) {\n    var log = context.log;\n    var store = redux_1.createStore(redux_1.combineReducers({\n        voice: one_state_interact_voice_1.reducer(context),\n        hotkeys: one_state_hotkeys_1.reducer(context),\n        patient: patient_1.patients(context),\n        screenpop: screenpop_1.screenpop(context),\n        map: map_1.map,\n        appointment: appointments_1.appointmentsreducer(context),\n        referal: referals_1.referalsreducer(context),\n        caller: caller_1.callerreducer(context),\n        callerselection: caller_1.callerselection(context),\n        pcp: pcp_1.pcpreducer(context),\n        calledto: calledto_1.calledtoreducer(context),\n        calleridentify: calleridentify_1.calleridentify(context),\n        drawer: drawer_1.drawer,\n        patientdrawer: patientdrawer_1.patientdrawer,\n        globalsearch: globalsearch_1.globalsearch(context)\n    }), redux_1.applyMiddleware(epicMiddleware));\n    epicMiddleware.run(epics_1.build(context));\n    return store;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/store/index.ts"],"names":[],"mappings":";;AAAA,+BAIe;AAMf,qEAIkC;AAElC,uDAE2B;AAa3B,kCAA8C;AAC9C,qDAAwD;AAExD,4CAAuE;AACvE,6BAA4B;AAC5B,+DAAqE;AACrE,oDAA0D;AAC1D,mCAAkC;AAClC,iDAAgD;AAChD,mCAAyD;AACzD,6BAAmC;AACnC,uCAA6C;AAC7C,mDAAkD;AAClD,+CAA8C;AAC9C,yCAAwC;AAExC,IAAM,cAAc,GAAG,uCAAoB,EAAE,CAAC;AAEjC,QAAA,KAAK,GAAG,UAAC,OAAY;IACtB,IAAA,iBAAG,CAAa;IACxB,IAAM,KAAK,GAAG,mBAAW,CACrB,uBAAe,CAAC;QACZ,KAAK,EAAE,kCAAK,CAAC,OAAO,CAAC;QACrB,OAAO,EAAE,2BAAO,CAAC,OAAO,CAAC;QACzB,OAAO,EAAC,kBAAO,CAAC,OAAO,CAAC;QACxB,SAAS,EAAC,qBAAS,CAAC,OAAO,CAAC;QAC5B,GAAG,WAAA;QACH,WAAW,EAAC,kCAAmB,CAAC,OAAO,CAAC;QACxC,OAAO,EAAC,0BAAe,CAAC,OAAO,CAAC;QAChC,MAAM,EAAC,sBAAa,CAAC,OAAO,CAAC;QAC7B,eAAe,EAAC,wBAAe,CAAC,OAAO,CAAC;QACxC,GAAG,EAAC,gBAAU,CAAC,OAAO,CAAC;QACvB,QAAQ,EAAC,0BAAe,CAAC,OAAO,CAAC;QACjC,cAAc,EAAC,+BAAc,CAAC,OAAO,CAAC;QACtC,MAAM,iBAAA;QACN,aAAa,+BAAA;QACb,YAAY,EAAC,2BAAY,CAAC,OAAO,CAAC;KACrC,CAAC,EAEF,uBAAe,CACX,cAAc,CACjB,CAEJ,CAAC;IACF,cAAc,CAAC,GAAG,CAAC,aAAS,CAAE,OAAO,CAAC,CAAC,CAAC;IACxC,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n} from 'redux';\n\nimport {\n    VoiceEvent,\n} from 'one-interact-voice'\n\nimport {\n    interact,\n    reducer as voice,\n    Actions as VoiceActions,\n} from 'one-state-interact-voice';\n\nimport {\n    reducer as hotkeys,\n} from 'one-state-hotkeys';\n\n\n\nimport {\n    reducer as patients,\n    Types as PatientTypes,\n} from './patient';\n\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport { build as buildEpic } from '../epics';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport {patients as patient,fetchPatientEpic } from '../epics/patient';\nimport { map } from \"./map\";\nimport { appointmentsreducer } from './appointment/src/appointments';\nimport { referalsreducer } from \"./referals/src/referals\";\nimport { drawer } from \"./drawer\";\nimport { patientdrawer } from \"./patientdrawer\";\nimport { callerreducer,callerselection } from \"./caller\";\nimport { pcpreducer } from \"./pcp\";\nimport { calledtoreducer } from \"./calledto\";\nimport { calleridentify } from './calleridentify';\nimport { globalsearch } from './globalsearch';\nimport { screenpop } from './screenpop';\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport const build = (context: any): any => {\n    const { log } = context;\n    const store = createStore(\n        combineReducers({\n            voice: voice(context),\n            hotkeys: hotkeys(context),\n            patient:patient(context),\n            screenpop:screenpop(context),\n            map,\n            appointment:appointmentsreducer(context),\n            referal:referalsreducer(context),\n            caller:callerreducer(context),\n            callerselection:callerselection(context),\n            pcp:pcpreducer(context),\n            calledto:calledtoreducer(context),\n            calleridentify:calleridentify(context),\n            drawer,\n            patientdrawer,\n            globalsearch:globalsearch(context)\n        }),\n\n        applyMiddleware(\n            epicMiddleware\n        ),\n\n    );\n    epicMiddleware.run(buildEpic (context));\n    return store;\n};\n"]}},"error":null,"hash":"34aa1048b650304a3197e7a77e70d2d6","cacheData":{"env":{}}}
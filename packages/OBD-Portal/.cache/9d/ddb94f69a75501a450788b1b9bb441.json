{"id":"../../../node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/tsconfig.json","includedInParent":true,"mtime":1569955866844},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/package.json","includedInParent":true,"mtime":1569955866842},{"name":"react","loc":{"line":14,"column":22},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react/index.js"},{"name":"antd/lib/button","loc":{"line":15,"column":39},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/button/index.js"},{"name":"antd/lib/table","loc":{"line":16,"column":38},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/table/index.js"},{"name":"antd/lib/input","loc":{"line":17,"column":38},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/input/index.js"},{"name":"antd/lib/select","loc":{"line":18,"column":39},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/select/index.js"},{"name":"antd/lib/typography","loc":{"line":19,"column":43},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/typography/index.js"},{"name":"antd/lib/row","loc":{"line":20,"column":36},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/row/index.js"},{"name":"antd/lib/col","loc":{"line":21,"column":36},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/col/index.js"},{"name":"react-redux","loc":{"line":22,"column":28},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react-redux/es/index.js"},{"name":"antd/lib/card","loc":{"line":23,"column":37},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/card/index.js"},{"name":"antd/lib/layout","loc":{"line":24,"column":39},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/layout/index.js"},{"name":"antd/lib/descriptions","loc":{"line":25,"column":45},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/descriptions/index.js"},{"name":"antd/lib/avatar","loc":{"line":26,"column":39},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/avatar/index.js"},{"name":"one-core","loc":{"line":27,"column":25},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-core/index.ts"},{"name":"antd/lib/date-picker","loc":{"line":28,"column":44},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/date-picker/index.js"},{"name":"antd/lib/message","loc":{"line":29,"column":40},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/message/index.js"},{"name":"one-ui-provider","loc":{"line":30,"column":32},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-ui-provider/index.ts"}],"generated":{"js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar react_1 = require(\"react\");\nvar button_1 = __importDefault(require(\"antd/lib/button\"));\nvar table_1 = __importDefault(require(\"antd/lib/table\"));\nvar input_1 = __importDefault(require(\"antd/lib/input\"));\nvar select_1 = __importDefault(require(\"antd/lib/select\"));\nvar typography_1 = __importDefault(require(\"antd/lib/typography\"));\nvar row_1 = __importDefault(require(\"antd/lib/row\"));\nvar col_1 = __importDefault(require(\"antd/lib/col\"));\nvar react_redux_1 = require(\"react-redux\");\nvar card_1 = __importDefault(require(\"antd/lib/card\"));\nvar layout_1 = __importDefault(require(\"antd/lib/layout\"));\nvar descriptions_1 = __importDefault(require(\"antd/lib/descriptions\"));\nvar avatar_1 = __importDefault(require(\"antd/lib/avatar\"));\nvar one_core_1 = require(\"one-core\");\nvar date_picker_1 = __importDefault(require(\"antd/lib/date-picker\"));\nvar message_1 = __importDefault(require(\"antd/lib/message\"));\nvar one_ui_provider_1 = require(\"one-ui-provider\");\nvar Text = typography_1.default.Text;\nvar TextArea = input_1.default.TextArea;\nvar Option = select_1.default.Option;\n// let fulldata: any = [];\n// let data: any = [];\nvar Sider = layout_1.default.Sider, Content = layout_1.default.Content;\nexports.EpicPatientSearchTab = function () {\n    //declare a hook\n    var _a = react_1.useState(null), datepicker = _a[0], setDatepicker = _a[1];\n    var _b = one_ui_provider_1.useCtx(), settings = _b.settings, log = _b.log, agentId = _b.agentId;\n    var _c = settings.epic_config, epic_config = _c === void 0 ? {} : _c;\n    var location = epic_config.location, activityId = epic_config.activityId;\n    var dateFormat = 'MM-DD-YYYY';\n    var dispatch = react_redux_1.useDispatch();\n    // let patientbak = useSelector((state: any) => state.inpatientssearchbak);\n    // let fdata = useSelector((state: any) => state.inpatientssearch);\n    // data = patientbak.dir;\n    // fulldata = fdata.dir;\n    var _d = react_redux_1.useSelector(function (state) { return (state.screenpop || {}); }), globalpatientscreenpopactive = _d.globalpatientscreenpopactive, globalpatientscreenpopmsg = _d.globalpatientscreenpopmsg;\n    if (globalpatientscreenpopactive) {\n        if (globalpatientscreenpopmsg && globalpatientscreenpopmsg === 'Epic Screen pop to the Patient Chart is successfully initiated') {\n            message_1.default.success(globalpatientscreenpopmsg);\n        }\n        else {\n            message_1.default.error(globalpatientscreenpopmsg);\n        }\n        dispatch({\n            type: \"one-screenpop-reset\",\n            payload: {\n                globalpatientscreenpopactive: false\n            }\n        });\n    }\n    var patientdetails = react_redux_1.useSelector(function (state) { return (state.globalsearch || {}); });\n    var emptydata = patientdetails.emptydata;\n    if (emptydata) {\n        message_1.default.error('No Records found. Please try again');\n        dispatch({\n            type: \"reset-emptydata\",\n            payload: {\n                emptydata: false\n            }\n        });\n    }\n    var sortDate = function (date) {\n        if (date) {\n            var dateinfo = new Date(date);\n            var yyyy = dateinfo.getFullYear();\n            var mm = ((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n            var dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n            return (mm + \"-\" + dd + \"-\" + yyyy);\n        }\n        else {\n            return \"\";\n        }\n    };\n    var sortDateToEPIC = function (date) {\n        if (date) {\n            var dateinfo = new Date(date);\n            var yyyy = dateinfo.getFullYear();\n            var mm = ((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n            var dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n            return (yyyy + \"-\" + mm + \"-\" + dd);\n        }\n        else {\n            return \"\";\n        }\n    };\n    var patients = [];\n    var patienttabledata = [];\n    if (patientdetails.patients) {\n        patients = patientdetails.patients;\n    }\n    console.log('patients', patients);\n    if (patients) {\n        patients.map(function (pdata, index) {\n            pdata.PatientID.map(function (mrninfo) {\n                var adde = one_core_1.array(pdata.Addresses).filter(function (a) { return (a.Type === 'Permanent'); });\n                var addr = adde.length > 0 ? adde[0] : \"\";\n                var zipcode = addr.PostalCode ? addr.PostalCode : \"\";\n                var phonenumarray = addr.PhoneNumbers ? addr.PhoneNumbers : [];\n                var phonenum = one_core_1.array(phonenumarray).filter(function (a) { return (a.Type === 'Home Phone'); });\n                var singlephone = phonenum.length > 0 ? phonenum[0] : \"\";\n                var homephone = singlephone.Number ? singlephone.Number : \"\";\n                var pidepi = one_core_1.array(pdata.PatientID).find(function (id) { return (id['Type'] === \"EPI\"); });\n                if (mrninfo.Type === \"MRN\") {\n                    var info = {\n                        // fname :pdata.FirstName,\n                        key: index,\n                        firstname: pdata.FirstName ? pdata.FirstName : \"\",\n                        lastname: pdata.LastName ? pdata.LastName : \"\",\n                        gender: pdata.Sex ? pdata.Sex : \"\",\n                        name: pdata.Name ? pdata.Name : \"\",\n                        dob: pdata.DateOfBirth ? sortDate(pdata.DateOfBirth) : \"\",\n                        mrn: mrninfo.ID ? mrninfo.ID : \"\",\n                        zip: zipcode ? zipcode : \"\",\n                        phone: homephone ? homephone : \"\",\n                        ssn: pdata.NationalIdentifier ? pdata.NationalIdentifier : \"\",\n                        pidepi: pidepi\n                    };\n                    patienttabledata.push(info);\n                }\n            });\n        });\n    }\n    var sortFunction = function (a, b) {\n        var keyA = a.firstname.toLowerCase();\n        var keyB = b.firstname.toLowerCase();\n        if (keyA < keyB)\n            return -1;\n        if (keyA > keyB)\n            return 1;\n        return 0;\n    };\n    patienttabledata.sort(sortFunction);\n    var onRowClick = function (event) {\n        console.log(event);\n        dispatch({\n            type: \"set-global-search-data-selected\",\n            payload: {\n                globalslidefirstname: event.firstname,\n                globalslidelastname: event.lastname,\n                globalslidedob: event.dob,\n                globalslidephone: event.phone,\n                globalslidemrn: event.mrn,\n                globalslidepid: (event.pidepi && (event.pidepi.ID ? event.pidepi.ID : ''))\n            },\n        });\n    };\n    var columns = [\n        {\n            title: \"MRN\",\n            dataIndex: \"mrn\",\n            key: \"mrn\"\n        },\n        {\n            title: \"First Name\",\n            dataIndex: \"firstname\",\n            key: \"firstname\"\n        },\n        {\n            title: \"Last Name\",\n            dataIndex: \"lastname\",\n            key: \"lastname\"\n        },\n        {\n            title: \"DOB\",\n            key: \"dob\",\n            dataIndex: \"dob\"\n        },\n        {\n            title: \"ZIP\",\n            key: \"zip\",\n            dataIndex: \"zip\"\n        },\n        {\n            title: \"Phone Number\",\n            key: \"phone\",\n            dataIndex: \"phone\"\n        },\n        {\n            title: \"SSN\",\n            key: \"ssn\",\n            dataIndex: \"ssn\"\n        }\n    ];\n    var handleGlobalSearch = function () {\n        var pglobalname = document.getElementsByClassName(\"pglobalname\")[0].value;\n        //let pglobaldob = document.getElementsByClassName(\"pglobaldob\")[0].value;\n        var pglobalmrn = document.getElementsByClassName(\"pglobalmrn\")[0].value;\n        var pglobalphone = document.getElementsByClassName(\"pglobalphone\")[0].value;\n        console.log('In handle global Search', pglobalname, datepicker, pglobalmrn, pglobalphone);\n        //console.log('In handle global Search',datepicker);\n        if ((pglobalname === null || pglobalname === undefined || pglobalname === '') &&\n            (datepicker === null || datepicker === undefined || datepicker === '') &&\n            (pglobalmrn === null || pglobalmrn === undefined || pglobalmrn === '') &&\n            (pglobalphone === null || pglobalphone === undefined || pglobalphone === '')) {\n            message_1.default.error('Please Enter below criteria for Search');\n        }\n        else {\n            dispatch({\n                type: 'get-global-search-data',\n                payload: {\n                    name: pglobalname,\n                    dob: datepicker,\n                    mrn: pglobalmrn,\n                    phone: pglobalphone\n                }\n            });\n        }\n    };\n    var onChange = function (date, dateString) {\n        var dateval = sortDateToEPIC(dateString);\n        setDatepicker(dateval);\n    };\n    var selectpatient = function (e) {\n        console.log(e);\n        var indexval = 0;\n        var index = patients.map(function (pdetails, index) {\n            pdetails.PatientID.map(function (mrninfo) {\n                if (mrninfo.Type === \"MRN\" && mrninfo.ID === e) {\n                    indexval = index;\n                    //return index;\n                }\n            });\n        });\n        console.log('index', indexval);\n        console.log('patients[index]', patients[indexval]);\n        dispatch({\n            type: 'one-patients-select',\n            payload: patients[indexval],\n        });\n        dispatch({\n            type: \"globalsearch\",\n            payload: {\n                visible: false\n            }\n        });\n    };\n    var selectpatientchart = (function (e) {\n        //console.log(e);\n        dispatch({\n            type: 'one-patient-global-screenpop-get',\n            payload: {\n                agentId: agentId,\n                location: location,\n                activityId: activityId,\n                patientid: e\n            }\n        });\n    });\n    var voice = react_redux_1.useSelector(function (state) { return state.voice; });\n    return (React.createElement(layout_1.default, null,\n        React.createElement(Content, null,\n            React.createElement(\"section\", { className: 'container' },\n                React.createElement(\"header\", { className: 'header' },\n                    React.createElement(row_1.default, { gutter: 8, align: 'middle', style: { padding: \"2px\" } },\n                        React.createElement(col_1.default, { span: 2 }),\n                        React.createElement(col_1.default, { span: 4 },\n                            React.createElement(Text, { strong: true }, \" Patient Name: \"),\n                            \" \",\n                            \" \",\n                            React.createElement(input_1.default, { size: 'small', placeholder: 'Name', className: 'pglobalname' })),\n                        React.createElement(col_1.default, { span: 4 },\n                            React.createElement(Text, { strong: true }, \" Patient DOB: \"),\n                            \" \",\n                            \" \",\n                            React.createElement(date_picker_1.default, { size: 'small', placeholder: 'MM-DD-YYYY', format: dateFormat, onChange: onChange, className: 'pglobaldob' })),\n                        React.createElement(col_1.default, { span: 4 },\n                            React.createElement(Text, { strong: true }, \" Patient MRN: \"),\n                            \" \",\n                            \" \",\n                            React.createElement(input_1.default, { size: 'small', placeholder: 'MRN', className: 'pglobalmrn' })),\n                        React.createElement(col_1.default, { span: 4 },\n                            React.createElement(Text, { strong: true }, \" Patient Phone: \"),\n                            \" \",\n                            \" \",\n                            React.createElement(input_1.default, { size: 'small', placeholder: 'Phone', className: 'pglobalphone' })),\n                        React.createElement(col_1.default, { span: 4 },\n                            React.createElement(button_1.default, { type: \"primary\", size: 'small', onClick: handleGlobalSearch, style: { marginTop: \"20px\", marginLeft: \"20px\" } }, \"Search\")))),\n                React.createElement(table_1.default, { columns: columns, dataSource: patienttabledata, onRow: function (record, rowIndex) {\n                        return {\n                            onClick: function (event) {\n                                onRowClick(record);\n                            }\n                        };\n                    } }))),\n        React.createElement(Sider, { width: '250', theme: \"light\" },\n            React.createElement(card_1.default, null,\n                React.createElement(\"div\", { align: \"center\" },\n                    React.createElement(avatar_1.default, { size: 64, icon: \"user\" })),\n                React.createElement(descriptions_1.default, { title: \"Info\" },\n                    React.createElement(descriptions_1.default.Item, { label: \" Name\", span: 16 },\n                        \" \",\n                        patientdetails.globalslidelastname ? patientdetails.globalslidelastname : '',\n                        \" \",\n                        patientdetails.globalslidefirstname ? patientdetails.globalslidefirstname : '',\n                        \" \"),\n                    React.createElement(descriptions_1.default.Item, { label: \"DOB\", span: 16 },\n                        \" \",\n                        patientdetails.globalslidedob ? patientdetails.globalslidedob : '',\n                        \" \"),\n                    React.createElement(descriptions_1.default.Item, { label: \"MRN\", span: 16 },\n                        \" \",\n                        patientdetails.globalslidemrn ? patientdetails.globalslidemrn : '',\n                        \" \"),\n                    React.createElement(descriptions_1.default.Item, { label: \"Phone\", span: 16 },\n                        \" \",\n                        patientdetails.globalslidephone ? patientdetails.globalslidephone : '',\n                        \"  \"),\n                    React.createElement(descriptions_1.default.Item, { label: \"\", span: 20, style: { span: 20 } },\n                        patientdetails && patientdetails.globalslidephone && React.createElement(button_1.default, { icon: \"phone\", style: { width: \"100%\" }, disabled: (!((voice) && (voice.data) && (voice.data.type !== 2010))), onClick: function () {\n                                console.debug('vvvvv', voice);\n                                if (voice) {\n                                    var actions = voice.actions;\n                                    if (actions) {\n                                        actions.consult(roomext);\n                                    }\n                                }\n                            } }, \"Consult\"),\n                        patientdetails && patientdetails.globalslidephone &&\n                            React.createElement(\"div\", null,\n                                React.createElement(\"br\", null),\n                                React.createElement(button_1.default, { icon: \"phone\", style: { width: \"100%\" }, disabled: (!((voice) && (voice.data) && (voice.data.type !== 2010))), onClick: function () {\n                                        console.debug('vvvvv', voice);\n                                        if (voice) {\n                                            var actions = voice.actions;\n                                            if (actions) {\n                                                actions.transfer(roomext);\n                                            }\n                                        }\n                                    } }, \"Transfer\"),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"br\", null),\n                                React.createElement(button_1.default, { style: { width: \"100%\" }, onClick: function () { return selectpatientchart(patientdetails.globalslidepid ? patientdetails.globalslidepid : ''); } }, \" Patient Chart \"),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"br\", null),\n                                React.createElement(button_1.default, { style: { width: \"100%\" }, onClick: function () { return selectpatient(patientdetails.globalslidemrn ? patientdetails.globalslidemrn : ''); } }, \" Select Patient \"))))))));\n};\n"},"sourceMaps":{"js":{"version":3,"file":"epicpetsearchtable.js","sourceRoot":"","sources":["../../../node_modules/one-micro-header/src/epicpatientsearch/epicpetsearchtable.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport Button from \"antd/lib/button\";\nimport Icon from \"antd/lib/icon\";\nimport Table from \"antd/lib/table\";\nimport Input from \"antd/lib/input\";\nimport Menu from \"antd/lib/menu\";\nimport Modal from \"antd/lib/modal\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Select from \"antd/lib/select\";\nimport Typography from \"antd/lib/typography\";\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"antd/lib/card\";\nimport Layout from \"antd/lib/layout\";\nimport Descriptions from \"antd/lib/descriptions\";\nimport Avatar from \"antd/lib/avatar\";\nimport { array } from 'one-core';\nimport DatePicker from 'antd/lib/date-picker';\nimport message from 'antd/lib/message';\nimport { useCtx } from \"one-ui-provider\";\n\nconst { Text } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\n// let fulldata: any = [];\n// let data: any = [];\n\n\nconst { Sider, Content } = Layout;\n\nexport const EpicPatientSearchTab = () => {\n  //declare a hook\n  const [datepicker, setDatepicker] = useState(null);\n  const { settings,log, agentId } = useCtx();\n  const { epic_config = {} } = settings;\n  const { location, activityId } = epic_config;\n  const dateFormat = 'MM-DD-YYYY';\n\n  \n  const dispatch = useDispatch();\n  // let patientbak = useSelector((state: any) => state.inpatientssearchbak);\n  // let fdata = useSelector((state: any) => state.inpatientssearch);\n  // data = patientbak.dir;\n  // fulldata = fdata.dir;\n  \n  const { globalpatientscreenpopactive,\n          globalpatientscreenpopmsg } = useSelector((state: any) => (\n          state.screenpop || {}\n        ));\n\n  if(globalpatientscreenpopactive){\n          if(globalpatientscreenpopmsg && globalpatientscreenpopmsg === 'Epic Screen pop to the Patient Chart is successfully initiated'){\n              message.success(globalpatientscreenpopmsg);\n          }else{\n              message.error(globalpatientscreenpopmsg);\n          }\n          dispatch({\n              type:\"one-screenpop-reset\",\n              payload : {\n                globalpatientscreenpopactive: false\n              }\n          })\n    }      \n\n\n  const  patientdetails = useSelector((state: any) => ( state.globalsearch || {}));\n  const emptydata = patientdetails.emptydata;\n  if(emptydata){\n    message.error('No Records found. Please try again');\n    dispatch({\n        type: \"reset-emptydata\",\n        payload: {\n          emptydata: false\n        }\n    });\n  }\n   \n  const sortDate = (date:any) =>{\n    if(date)\n    {\n        let dateinfo = new Date(date);\n        let yyyy = dateinfo.getFullYear();\n        let mm =((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n        let dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n        return (mm + \"-\" + dd + \"-\" + yyyy);\n    }else{\n      return \"\";\n    }\n  }\n\n  const sortDateToEPIC = (date:any) =>{\n    if(date)\n    {\n        let dateinfo = new Date(date);\n        let yyyy = dateinfo.getFullYear();\n        let mm =((dateinfo.getMonth() + 1) < 10 ? '0' : '') + (dateinfo.getMonth() + 1);\n        let dd = (dateinfo.getDate() < 10 ? '0' : '') + dateinfo.getDate();\n        return (yyyy + \"-\" + mm + \"-\" + dd);\n    }else{\n      return \"\";\n    }\n  }\n\n  let patients:any=[];\n  let patienttabledata:any = [];\n  if(patientdetails.patients)\n  {\n    patients=patientdetails.patients;\n  }\n  console.log('patients',patients);\n  if(patients)\n  {\n    patients.map((pdata:any,index:any)=>{\n        pdata.PatientID.map((mrninfo:any)=>{\n          let adde= array(pdata.Addresses).filter((a: any) => (\n            a.Type === 'Permanent'\n            ));\n            let addr =adde.length>0?adde[0]:\"\";\n            let zipcode =addr.PostalCode?addr.PostalCode:\"\";\n            let phonenumarray = addr.PhoneNumbers?addr.PhoneNumbers:[];\n            let phonenum= array(phonenumarray).filter((a: any) => (\n              a.Type === 'Home Phone'\n              ));\n            let singlephone =phonenum.length>0?phonenum[0]:\"\";\n            let homephone =singlephone.Number?singlephone.Number:\"\";\n            let pidepi = array(pdata.PatientID).find((id: any) => (\n              id['Type'] === \"EPI\"\n            ))\n        if(mrninfo.Type===\"MRN\") {\n          const info = {\n            // fname :pdata.FirstName,\n            key: index,\n            firstname: pdata.FirstName ? pdata.FirstName : \"\",\n            lastname:pdata.LastName ? pdata.LastName : \"\",\n            gender:pdata.Sex ? pdata.Sex : \"\",\n            name:pdata.Name ? pdata.Name : \"\",\n            dob:pdata.DateOfBirth ? sortDate(pdata.DateOfBirth) : \"\",\n            mrn: mrninfo.ID ? mrninfo.ID : \"\",\n            zip:zipcode?zipcode:\"\",\n            phone: homephone ? homephone : \"\",\n            ssn: pdata.NationalIdentifier ? pdata.NationalIdentifier : \"\",\n            pidepi: pidepi\n          }\n          patienttabledata.push(info)\n        }\n        })\n    })\n  }\n\n  const sortFunction = (a: any, b: any) =>{ \n        var keyA = a.firstname.toLowerCase();\n        var keyB = b.firstname.toLowerCase();\n        if (keyA < keyB)\n        return -1;\n      if (keyA > keyB)\n        return 1;\n      return 0;\n    }\n\n  patienttabledata.sort(sortFunction);  \n\n  \n\n  const onRowClick = (event: any) => {\n    console.log(event);\n    dispatch({\n      type: \"set-global-search-data-selected\",\n      payload: {\n        globalslidefirstname: event.firstname,\n        globalslidelastname: event.lastname,\n        globalslidedob: event.dob,\n        globalslidephone: event.phone,\n        globalslidemrn: event.mrn,\n        globalslidepid: (event.pidepi && (event.pidepi.ID?event.pidepi.ID:''))\n      },\n    });\n  }\n\n\n  const columns = [\n    {\n      title: \"MRN\",\n      dataIndex: \"mrn\",\n      key: \"mrn\"\n    },\n    {\n      title: \"First Name\",\n      dataIndex: \"firstname\",\n      key: \"firstname\"\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastname\",\n      key: \"lastname\"\n    },\n    {\n      title: \"DOB\",\n      key: \"dob\",\n      dataIndex: \"dob\"\n    },\n    {\n      title: \"ZIP\",\n      key: \"zip\",\n      dataIndex: \"zip\"\n    },\n    {\n      title: \"Phone Number\",\n      key: \"phone\",\n      dataIndex: \"phone\"\n    },\n    {\n        title: \"SSN\",\n        key: \"ssn\",\n        dataIndex: \"ssn\"\n      }\n    \n  ];\n\n  const handleGlobalSearch = () => {\n     \n     let pglobalname = document.getElementsByClassName(\"pglobalname\")[0].value;\n     //let pglobaldob = document.getElementsByClassName(\"pglobaldob\")[0].value;\n     let pglobalmrn = document.getElementsByClassName(\"pglobalmrn\")[0].value;\n     let pglobalphone = document.getElementsByClassName(\"pglobalphone\")[0].value;\n     console.log('In handle global Search',pglobalname,datepicker,pglobalmrn,pglobalphone);\n     //console.log('In handle global Search',datepicker);\n     if((pglobalname===null || pglobalname===undefined || pglobalname === '') && \n        (datepicker===null || datepicker===undefined || datepicker === '') &&\n        (pglobalmrn===null || pglobalmrn===undefined || pglobalmrn === '') &&\n        (pglobalphone===null || pglobalphone===undefined || pglobalphone ==='')){\n          message.error('Please Enter below criteria for Search');\n        }else{\n          dispatch({\n            type: 'get-global-search-data',\n            payload: {\n                name:pglobalname,\n                dob:datepicker,\n                mrn:pglobalmrn,\n                phone:pglobalphone\n            }\n        });\n        }\n     \n\n  }\n  \n  const onChange = (date:any, dateString:any) => {\n    let dateval = sortDateToEPIC(dateString);\n    setDatepicker(dateval);\n  }\n\n  const selectpatient = (e:any) => {\n    console.log(e);\n    let indexval = 0;\n    let index = patients.map((pdetails: any, index:any) => {\n      pdetails.PatientID.map((mrninfo:any)=>{\n        if(mrninfo.Type===\"MRN\" && mrninfo.ID === e) {\n          indexval = index;\n          //return index;\n        }\n      })\n    });\n    console.log('index',indexval);\n    console.log('patients[index]',patients[indexval]);\n\n    \n      dispatch({\n        type: 'one-patients-select',\n        payload: patients[indexval],\n\n      })\n      dispatch({\n        type: \"globalsearch\",\n        payload: {\n          visible: false\n        }\n      });\n    \n\n\n  }\n\n  const selectpatientchart = ((e:any) => {\n    //console.log(e);\n    dispatch({\n      type: 'one-patient-global-screenpop-get',\n      payload:{\n          agentId: agentId,\n          location: location,\n          activityId: activityId,\n          patientid: e\n      }\n    });\n  });\n\n\n  const voice = useSelector((state: any) => state.voice);\n\n  return (\n    <Layout >\n      <Content>\n        <section className='container'>\n          <header className='header'>\n            \n            <Row gutter={8} align='middle' style={{ padding: \"2px\" }}>\n              <Col span={2}>\n\n              </Col>\n              <Col span={4}>\n                  <Text strong> Patient Name: </Text> {\" \"}\n                  <Input size='small' placeholder='Name' className='pglobalname'/>\n                  \n              </Col>\n              <Col span={4}>\n                  <Text strong> Patient DOB: </Text> {\" \"}\n                  <DatePicker size='small' placeholder='MM-DD-YYYY' format={dateFormat} onChange={onChange} className='pglobaldob'/>\n              </Col>\n              <Col span={4}>\n                  <Text strong> Patient MRN: </Text> {\" \"}\n                  <Input size='small' placeholder='MRN' className='pglobalmrn'/>\n              </Col>\n              <Col span={4}>\n                  <Text strong> Patient Phone: </Text> {\" \"}\n                  <Input size='small' placeholder='Phone' className='pglobalphone'/>\n              </Col>\n              <Col span={4}>\n                  <Button type=\"primary\"  size='small' onClick={handleGlobalSearch} style={{marginTop: \"20px\", marginLeft: \"20px\"}}>Search</Button>\n              </Col>\n            </Row>\n          </header>\n\n          <Table\n            columns={columns}\n            dataSource={patienttabledata}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: event => {\n                  onRowClick(record);\n                }\n              }\n            }}\n          />\n        </section>\n      </Content>\n      <Sider width='250' theme=\"light\">\n        <Card >\n          <div align=\"center\" >\n            <Avatar size={64} icon=\"user\" />\n            </div>\n          <Descriptions title=\"Info\">\n            <Descriptions.Item label=\" Name\" span={16}> {patientdetails.globalslidelastname?patientdetails.globalslidelastname:''} {patientdetails.globalslidefirstname?patientdetails.globalslidefirstname:''} </Descriptions.Item>\n            <Descriptions.Item label=\"DOB\" span={16}> {patientdetails.globalslidedob?patientdetails.globalslidedob:''} </Descriptions.Item>\n            <Descriptions.Item label=\"MRN\" span={16}> {patientdetails.globalslidemrn?patientdetails.globalslidemrn:''} </Descriptions.Item>\n            <Descriptions.Item label=\"Phone\" span={16}> {patientdetails.globalslidephone?patientdetails.globalslidephone:''}  </Descriptions.Item>\n\n            <Descriptions.Item label=\"\" span={20} style={{span:20}}>\n            {patientdetails && patientdetails.globalslidephone && <Button  icon=\"phone\" style={{width:\"100%\"}}\n            disabled={\n              (!((voice) && (voice.data) && (voice.data.type !== 2010)))\n            }\n            onClick={() => {\n              console.debug(\n                'vvvvv', voice\n              );\n              if (voice) {\n                const { actions } = voice;\n                if (actions) {\n                  actions.consult(\n                    roomext,\n                  );\n                }\n              }\n            }} >Consult</Button>}\n            {patientdetails && patientdetails.globalslidephone &&\n            <div>\n              <br/>\n              <Button  icon=\"phone\" style={{width:\"100%\"}}\n            disabled={\n              (!((voice) && (voice.data) && (voice.data.type !== 2010)))\n            }\n            onClick={() => {\n              console.debug(\n                'vvvvv', voice\n              );\n              if (voice) {\n                const { actions } = voice;\n                if (actions) {\n                  actions.transfer(\n                    roomext,\n                  );\n                }\n              }\n            }} >Transfer</Button>\n\n            <br/>\n            <br/>\n            <Button style={{width:\"100%\"}} onClick={() => selectpatientchart(patientdetails.globalslidepid?patientdetails.globalslidepid:'')}> Patient Chart </Button>\n            <br/>\n            <br/>\n            <Button  style={{width:\"100%\"}} onClick={() => selectpatient(patientdetails.globalslidemrn?patientdetails.globalslidemrn:'')}> Select Patient </Button>\n            </div>\n\n            }\n\n            </Descriptions.Item>\n            \n          </Descriptions>\n          {/* <Row gutter={8} align='middle' style={{padding:\"2px\"}}>\n                <Col span={12}>\n                  <Text strong>Address: </Text>\n                  <TextArea rows={3} value={addressheader}/>\n                </Col>\n                <Col span={4}></Col>\n                <Col span={4}>\n                  <Text strong>Phone Number: </Text>\n                  <Input value={phnoheader} size=\"small\"/>\n                </Col>\n              </Row> */}\n        </Card>\n      </Sider>\n    </Layout>\n\n\n  );\n};"]}},"error":null,"hash":"f774c69de5a0ac9419b780c73e2601a3","cacheData":{"env":{}}}
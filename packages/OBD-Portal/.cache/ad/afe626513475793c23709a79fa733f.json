{"id":"../../../node_modules/unch-app/src/epics/index.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1570193308535},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170},{"name":"redux-observable","loc":{"line":3,"column":33},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/redux-observable/lib/esm/index.js"},{"name":"./patient","loc":{"line":4,"column":24},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/patient/index.ts"},{"name":"./caller","loc":{"line":5,"column":23},"parent":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/index.ts","resolved":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/src/epics/caller/index.ts"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar redux_observable_1 = require(\"redux-observable\");\nvar patient_1 = require(\"./patient\");\nvar caller_1 = require(\"./caller\");\nexports.rootEpic = redux_observable_1.combineEpics(patient_1.fetchPatientEpic);\n// export const rootReducer = combineReducers ({\n//         patients\n// });\nexports.build = function (context) { return (redux_observable_1.combineEpics(patient_1.fetchPatientEpic(context), patient_1.fetchApptEpic(context), patient_1.fetchRefEpic(context), patient_1.pushCallerPatEpic(context), patient_1.fetchPatientFromDB(context), patient_1.fetchPCPEpic(context), caller_1.updateCallertoDB(context), patient_1.fetchCalledToEpic(context), caller_1.ferchCallerFromDB(context), patient_1.pushClearCalledTo(context), patient_1.pushClearCaller(context), patient_1.pushClearReferal(context), patient_1.pushClearAppt(context), patient_1.patientNoMatchEpic(context), patient_1.fetchGlobalPatientEpic(context), patient_1.fetchAddressOfMapToEpic(context), patient_1.pushClearGlobalSearch(context), patient_1.pushCancelApptToEpic(context), patient_1.fetchPatientEpicScreenPop(context))); };\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/epics/index.ts"],"names":[],"mappings":";;AAAA,qDAAgD;AAEhD,qCAK+B;AAC/B,mCAA6D;AAEhD,QAAA,QAAQ,GAAG,+BAAY,CAChC,0BAAgB,CACnB,CAAC;AAEF,gDAAgD;AAChD,mBAAmB;AACnB,MAAM;AAGO,QAAA,KAAK,GAAG,UAAC,OAAW,IAAG,OAAA,CAChC,+BAAY,CACR,0BAAgB,CAAE,OAAO,CAAC,EAC1B,uBAAa,CAAC,OAAO,CAAC,EACtB,sBAAY,CAAC,OAAO,CAAC,EACrB,2BAAiB,CAAC,OAAO,CAAC,EAC1B,4BAAkB,CAAC,OAAO,CAAC,EAC3B,sBAAY,CAAC,OAAO,CAAC,EACrB,yBAAgB,CAAC,OAAO,CAAC,EACzB,2BAAiB,CAAC,OAAO,CAAC,EAC1B,0BAAiB,CAAC,OAAO,CAAC,EAC1B,2BAAiB,CAAC,OAAO,CAAC,EAC1B,yBAAe,CAAC,OAAO,CAAC,EACxB,0BAAgB,CAAC,OAAO,CAAC,EACzB,uBAAa,CAAC,OAAO,CAAC,EACtB,4BAAkB,CAAC,OAAO,CAAC,EAC3B,gCAAsB,CAAC,OAAO,CAAC,EAC/B,iCAAuB,CAAC,OAAO,CAAC,EAChC,+BAAqB,CAAC,OAAO,CAAC,EAC9B,8BAAoB,CAAC,OAAO,CAAC,EAC7B,mCAAyB,CAAC,OAAO,CAAC,CACrC,CACJ,EAtBmC,CAsBnC,CAAC","sourcesContent":["import { combineEpics } from 'redux-observable';\nimport { combineReducers } from 'redux';\nimport {patients,fetchPatientEpic,fetchApptEpic,fetchRefEpic, pushCallerPatEpic, fetchPCPEpic,\n            fetchCalledToEpic,patientNoMatchEpic,\n            pushClearCalledTo,pushClearCaller,pushClearReferal,pushClearAppt,\n            fetchGlobalPatientEpic, fetchAddressOfMapToEpic, pushClearGlobalSearch,\n            pushCancelApptToEpic, fetchPatientEpicScreenPop, fetchPatientFromDB\n            } from './patient';\nimport {updateCallertoDB, ferchCallerFromDB} from './caller';\n\nexport const rootEpic = combineEpics (\n    fetchPatientEpic\n);\n\n// export const rootReducer = combineReducers ({\n//         patients\n// });\n\n\nexport const build = (context:any)=>(\n    combineEpics (\n        fetchPatientEpic (context),\n        fetchApptEpic(context),\n        fetchRefEpic(context),\n        pushCallerPatEpic(context),\n        fetchPatientFromDB(context),\n        fetchPCPEpic(context),\n        updateCallertoDB(context),\n        fetchCalledToEpic(context),\n        ferchCallerFromDB(context),\n        pushClearCalledTo(context),\n        pushClearCaller(context),\n        pushClearReferal(context),\n        pushClearAppt(context),\n        patientNoMatchEpic(context),\n        fetchGlobalPatientEpic(context),\n        fetchAddressOfMapToEpic(context),\n        pushClearGlobalSearch(context),\n        pushCancelApptToEpic(context),\n        fetchPatientEpicScreenPop(context)\n    )\n);"]}},"error":null,"hash":"992496c66d9a2a2789baf633d96f3770","cacheData":{"env":{}}}
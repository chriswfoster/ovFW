{"id":"../../../node_modules/one-micro-header/src/globalsearch.tsx","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/tsconfig.json","includedInParent":true,"mtime":1569955866844},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/package.json","includedInParent":true,"mtime":1569955866842},{"name":"react","loc":{"line":17,"column":22},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react/index.js"},{"name":"react-redux","loc":{"line":14,"column":28},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react-redux/es/index.js"},{"name":"antd/lib/select","loc":{"line":15,"column":39},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/select/index.js"},{"name":"antd/lib/modal","loc":{"line":16,"column":38},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/modal/index.js"},{"name":"./epicpatientsearch","loc":{"line":20,"column":34},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/epicpatientsearch/index.tsx"},{"name":"antd/lib/tabs","loc":{"line":22,"column":37},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-micro-header/src/globalsearch.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/lib/tabs/index.js"}],"generated":{"js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar react_redux_1 = require(\"react-redux\");\nvar select_1 = __importDefault(require(\"antd/lib/select\"));\nvar modal_1 = __importDefault(require(\"antd/lib/modal\"));\nvar react_1 = require(\"react\");\n//import { Departments } from \"../search/departments\";\n//import { PatientSearch } from \"../search/patients\";\nvar epicpatientsearch_1 = require(\"./epicpatientsearch\");\n//import {DoctorSearch } from \"../search/doctor\";\nvar tabs_1 = __importDefault(require(\"antd/lib/tabs\"));\nvar TabPane = tabs_1.default.TabPane;\nexports.GlobalSearchDrawerComp = function () {\n    var drawerdata = react_redux_1.useSelector(function (state) { return state.globalsearch; });\n    var dispatch = react_redux_1.useDispatch();\n    var _a = react_1.useState([]), tabledate = _a[0], setTableData = _a[1];\n    var Option = select_1.default.Option;\n    var visible = false;\n    if (drawerdata && drawerdata.visible) {\n        visible = true;\n    }\n    return (React.createElement(\"div\", { style: { textAlign: \"center\", lineHeight: \"12px\" } },\n        React.createElement(modal_1.default, { title: \"Search \", visible: visible, width: 1400, onOk: function (event) {\n                dispatch({\n                    type: \"globalsearch\",\n                    payload: {\n                        visible: false\n                    }\n                });\n            }, onCancel: function (event) {\n                dispatch({\n                    type: \"globalsearch\",\n                    payload: {\n                        visible: false\n                    }\n                });\n            } },\n            React.createElement(tabs_1.default, { defaultActiveKey: \"1\", style: { background: \"#fff\" }, className: \"tabs\", onChange: function () { return console.debug(\"tab clicked\"); } },\n                React.createElement(TabPane, { tab: \"Patient\", key: \"1\" },\n                    React.createElement(epicpatientsearch_1.EpicPatientSearch, null))))));\n};\n"},"sourceMaps":{"js":{"version":3,"file":"globalsearch.js","sourceRoot":"","sources":["../../../node_modules/one-micro-header/src/globalsearch.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAA+B;AAG/B,2CAAuD;AAGvD,2DAAqC;AAGrC,yDAAmC;AACnC,+BAA+B;AAC/B,sDAAsD;AACtD,qDAAqD;AACrD,yDAAwD;AACxD,iDAAiD;AACjD,uDAAiC;AAIzB,IAAA,gCAAO,CAAU;AAEZ,QAAA,sBAAsB,GAAG;IACpC,IAAM,UAAU,GAAG,yBAAW,CAAC,UAAC,KAAS,IAAK,OAAA,KAAK,CAAC,YAAY,EAAlB,CAAkB,CAAC,CAAC;IAClE,IAAM,QAAQ,GAAG,yBAAW,EAAE,CAAC;IACzB,IAAA,yBAAuC,EAAtC,iBAAS,EAAC,oBAA4B,CAAC;IACtC,IAAA,gCAAM,CAAY;IACxB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,IAAG,UAAU,IAAI,UAAU,CAAC,OAAO,EAAC;QAC5B,OAAO,GAAC,IAAI,CAAC;KACpB;IACH,OAAO,CACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE;QAgBrD,oBAAC,eAAK,IACF,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,IAAI,EACX,IAAI,EAAE,UAAA,KAAK;gBACT,QAAQ,CAAC;oBACP,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,OAAO,EAAE,KAAK;qBACf;iBACF,CAAC,CAAC;YACL,CAAC,EACD,QAAQ,EAAE,UAAA,KAAK;gBACb,QAAQ,CAAC;oBACP,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,OAAO,EAAE,KAAK;qBACf;iBACF,CAAC,CAAC;YACL,CAAC;YAGA,oBAAC,cAAI,IACA,gBAAgB,EAAC,GAAG,EACpB,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,EAC7B,SAAS,EAAC,MAAM,EAChB,QAAQ,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAA5B,CAA4B;gBAE5C,oBAAC,OAAO,IAAC,GAAG,EAAC,SAAS,EAAC,GAAG,EAAC,GAAG;oBAC5B,oBAAC,qCAAiB,OAAG,CACb,CAcP,CAEH,CAEN,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport Drawer from \"antd/lib/drawer\";\nimport  Divider  from \"antd/lib/divider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport {useState} from \"react\";\n//import { Departments } from \"../search/departments\";\n//import { PatientSearch } from \"../search/patients\";\nimport { EpicPatientSearch } from \"./epicpatientsearch\";\n//import {DoctorSearch } from \"../search/doctor\";\nimport Tabs from \"antd/lib/tabs\";\n\n\n\nconst { TabPane } = Tabs;\n\nexport const GlobalSearchDrawerComp = () => {\n  const drawerdata = useSelector((state:any) => state.globalsearch);\n  const dispatch = useDispatch();\n  const [tabledate,setTableData] = useState([]);\n  const { Option } = Select;\n    let visible = false;\n    if(drawerdata && drawerdata.visible){\n            visible=true;\n    }\n  return (\n    <div style={{ textAlign: \"center\", lineHeight: \"12px\" }}>\n      {/* <Drawer\n        width=\"400px\"\n        height=\"500px\"\n        placement=\"top\"\n        closable={true}\n        onClose={event => {\n          dispatch({\n            type: \"searchdrawer\",\n            payload: {\n              visible: false\n            }\n          });\n        }}\n        visible={visible}\n      > */}\n      <Modal\n          title=\"Search \"\n          visible={visible}\n          width={1400}\n          onOk={event => {\n            dispatch({\n              type: \"globalsearch\",\n              payload: {\n                visible: false\n              }\n            });\n          }}\n          onCancel={event => {\n            dispatch({\n              type: \"globalsearch\",\n              payload: {\n                visible: false\n              }\n            });\n          }}\n\n         >\n           <Tabs\n                defaultActiveKey=\"1\"\n                style={{ background: \"#fff\" }}\n                className=\"tabs\"\n                onChange={() => console.debug(\"tab clicked\")}\n            >\n                <TabPane tab=\"Patient\" key=\"1\" >\n                  <EpicPatientSearch />\n                </TabPane>\n                {/* <TabPane tab=\"InPatient\"  key=\"2\" >\n                  <PatientSearch />\n                </TabPane>\n                <TabPane tab=\"Physician\"  key=\"3\" >\n                  <DoctorSearch/> \n                </TabPane>\n                <TabPane tab=\"Directory\"  key=\"4\" >\n                  <Departments />\n                </TabPane> */}\n                \n                \n                {/* <TabPane tab=\"All\"  key=\"5\" disabled />\n                <TabPane tab=\"PatientByLocation\"  key=\"6\" disabled /> */}\n            </Tabs>\n            \n        </Modal>\n      {/* </Drawer> */}\n    </div>\n  );\n};\n"]}},"error":null,"hash":"e42928c02cbbe5d910d9f70965669885","cacheData":{"env":{}}}
{"id":"../../../node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1569552466469},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/OBD-Portal/package.json","includedInParent":true,"mtime":1569955431018},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/package.json","includedInParent":true,"mtime":1569552466432},{"name":"react","loc":{"line":10,"column":33},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react/index.js"},{"name":"react-chartjs-2","loc":{"line":11,"column":32},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react-chartjs-2/es/index.js"},{"name":"react-redux","loc":{"line":12,"column":28},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/react-redux/es/index.js"},{"name":"chartjs-plugin-datalabels","loc":{"line":13,"column":8},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.js"},{"name":"util","loc":{"line":14,"column":21},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/node-libs-browser/node_modules/util/util.js"},{"name":"antd","loc":{"line":15,"column":21},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/antd/es/index.js"}],"generated":{"js":"\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar react_chartjs_2_1 = require(\"react-chartjs-2\");\nvar react_redux_1 = require(\"react-redux\");\nrequire(\"chartjs-plugin-datalabels\");\nvar util_1 = require(\"util\");\nvar antd_1 = require(\"antd\");\nexports.ApptGraph = function () {\n    var noShowCount = 0, pastCount = 0, upcomingCount = 0, cancelledCount = 0, completecount = 0;\n    var resolverui;\n    var apptstatus = react_redux_1.useSelector(function (state) { return state.appointment.appointments; });\n    if (apptstatus && util_1.isArray(apptstatus)) {\n        apptstatus.forEach(function (element) {\n            if (element.AppointmentStatus === \"No Show\") {\n                noShowCount = noShowCount + 1;\n            }\n            else if (element.AppointmentStatus === \"Completed\") {\n                pastCount = pastCount + 1;\n            }\n            else if (element.AppointmentStatus === \"Arrived\") {\n                completecount = completecount + 1;\n            }\n            else if ((element.AppointmentStatus === \"Scheduled\")) {\n                upcomingCount = upcomingCount + 1;\n            }\n            else if (element.AppointmentStatus === \"Canceled\") {\n                cancelledCount = cancelledCount + 1;\n            }\n            else {\n                console.log(\"No Appointments\");\n            }\n        });\n    }\n    else {\n        console.log(\"The data set is empty\");\n    }\n    var data = {\n        labels: [\n            \"Appointments\"\n        ],\n        datasets: [\n            {\n                label: \"No Shows\",\n                data: [noShowCount],\n                backgroundColor: \"#008080\",\n            },\n            {\n                label: \"Completed\",\n                data: [completecount],\n                backgroundColor: \"#FF6384\",\n            },\n            {\n                label: \"Past Apts\",\n                data: [pastCount],\n                backgroundColor: \"#36A2EB\",\n            },\n            {\n                label: \"Upcoming Apts\",\n                data: [upcomingCount],\n                backgroundColor: \"#FFCE56\",\n            },\n            {\n                label: \"Cancelled\",\n                data: [cancelledCount],\n                backgroundColor: \"#8E44AD\",\n            }\n        ]\n    };\n    if (apptstatus && (apptstatus.length > 0)) {\n        resolverui = (React.createElement(\"div\", null,\n            React.createElement(react_chartjs_2_1.Bar, { data: data, width: 400, height: 200, options: {\n                    scales: {\n                        yAxes: [{\n                                ticks: {\n                                    stepSize: 1\n                                }\n                            }]\n                    },\n                    legend: {\n                        position: \"top\"\n                    },\n                    maintainAspectRatio: false,\n                    plugins: {\n                        datalabels: {\n                            display: true,\n                            color: 'white'\n                        }\n                    }\n                } })));\n    }\n    else {\n        if (apptstatus && (apptstatus.length == 0)) {\n            resolverui = (React.createElement(\"div\", { style: { textAlign: \"left\", lineHeight: \"22px\", alignItems: 'center' } },\n                React.createElement(antd_1.Result, { style: { padding: '24px 32px' }, status: \"warning\", title: \"No Appointments Found.\" })));\n        }\n        else {\n            resolverui = (React.createElement(\"div\", { style: { textAlign: \"left\", lineHeight: \"22px\" } }));\n        }\n    }\n    return (React.createElement(\"div\", null, resolverui));\n};\n"},"sourceMaps":{"js":{"version":3,"file":"apptgraph.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/ui/dashboard/appointments/apptgraph.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport 'chartjs-plugin-datalabels';\nimport { isArray } from 'util';\nimport { Result } from 'antd';\n\n\n\nexport const ApptGraph = () => {\n\n\n\n    let noShowCount = 0,pastCount = 0, upcomingCount = 0, cancelledCount = 0, completecount = 0;\n\n    let resolverui;\n    let apptstatus = useSelector((state: any) => state.appointment.appointments);\n\n\n    if (apptstatus && isArray(apptstatus)) {\n        apptstatus.forEach((element: any) => {\n\n            if (element.AppointmentStatus === \"No Show\") {\n                noShowCount = noShowCount + 1;\n            }\n            else if (element.AppointmentStatus === \"Completed\") {\n                pastCount = pastCount + 1;\n            }\n            else if(element.AppointmentStatus === \"Arrived\") {\n                completecount = completecount + 1;\n            }\n            else if ((element.AppointmentStatus === \"Scheduled\") ) {\n                upcomingCount = upcomingCount + 1;\n            }\n            else if (element.AppointmentStatus === \"Canceled\") {\n                cancelledCount = cancelledCount + 1;\n            }\n            else {\n               console.log(\"No Appointments\");\n            }\n\n        });\n    }\n    else {\n        console.log(\"The data set is empty\");\n    }\n\n\n    let data = {\n\n        labels :[\n            \"Appointments\"\n        ],\n        datasets: [\n\n            {\n                label: \"No Shows\",\n                data: [noShowCount],\n                backgroundColor: \"#008080\",\n\n            },\n            {\n                label: \"Completed\",\n                data: [completecount],\n                backgroundColor: \"#FF6384\",\n            },\n            {\n                label: \"Past Apts\",\n                data: [pastCount],\n                backgroundColor: \"#36A2EB\",\n            },\n            {\n                label: \"Upcoming Apts\",\n                data: [upcomingCount],\n                backgroundColor: \"#FFCE56\",\n\n            },\n            {\n                label: \"Cancelled\",\n                data: [cancelledCount],\n                backgroundColor: \"#8E44AD\",\n            }\n        ]\n    }\n\n    if(apptstatus && (apptstatus.length > 0))\n    {\n        resolverui = (\n            <div>\n            <Bar\n                data={data}\n                width={400}\n                height={200}\n                options={{\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                stepSize: 1\n                            }\n                        }]\n                    },\n                    legend: {\n                        position: \"top\"\n                    },\n                    maintainAspectRatio: false,\n                    plugins: {\n                        datalabels: {\n                            display: true,\n                            color: 'white'\n                        }\n                    }\n                }}\n            />\n            </div>\n        )\n    }\n    else{\n        if(apptstatus && (apptstatus.length == 0))\n           {\n               resolverui = (\n                <div style={{ textAlign: \"left\", lineHeight: \"22px\", alignItems: 'center' }}>\n                <Result style={{padding: '24px 32px'}}\n              status=\"warning\"\n              title=\"No Appointments Found.\"\n\n            />\n              </div>\n               )\n           }\n           else {\n            resolverui = (\n                <div style={{ textAlign: \"left\", lineHeight: \"22px\" }}>\n               </div>\n               );\n           }\n    }\n    return (\n        <div>\n            {/*<Bar\n                data={data}\n                width={400}\n                height={200}\n                options={{\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                stepSize: 1\n                            }\n                        }]\n                    },\n                    legend: {\n                        position: \"top\"\n                    },\n                    maintainAspectRatio: false,\n                    plugins: {\n                        datalabels: {\n                            display: true,\n                            color: 'white'\n                        }\n                    }\n                }}\n            />*/}\n            {resolverui}\n        </div>\n    )\n}\n"]}},"error":null,"hash":"e9d30dd08710d21e806ed30db743626a","cacheData":{"env":{}}}
{"id":"7+xg","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-gadget-voice/tsconfig.json","includedInParent":true,"mtime":1569550736039},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/unch-app-gadget/package.json","includedInParent":true,"mtime":1569550537782},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-gadget-voice/package.json","includedInParent":true,"mtime":1569550736038},{"name":"./dialog","loc":{"line":3,"column":23},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-gadget-voice/src/trace.ts","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-gadget-voice/src/dialog.ts"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dialog_1 = require(\"./dialog\");\n/**\n * Debug utility to log event data\n * @param event\n */\nexports.traceEvent = function (event, currCall) {\n    if (currCall === void 0) { currCall = {}; }\n    var type = event.type, _a = event.data, user = _a.user, dialog = _a.dialog;\n    var ustate = user.getState();\n    if (!(dialog)) {\n        console.debug('gadget-voice-trace: %s', JSON.stringify({\n            ustate: ustate,\n            currCall: currCall,\n        }));\n    }\n    else {\n        var state = dialog.getState();\n        var dialogId = dialog.getId();\n        var callType = dialog.getCallType();\n        var parts = [];\n        var participants = dialog.getParticipants();\n        for (var _i = 0, participants_1 = participants; _i < participants_1.length; _i++) {\n            var _b = participants_1[_i], pstate = _b.state, mediaAddress = _b.mediaAddress;\n            parts.push({ pstate: pstate, mediaAddress: mediaAddress });\n        }\n        console.debug('gadget-voice-trace: %s', JSON.stringify({\n            ustate: ustate,\n            state: state,\n            dialogId: dialogId,\n            callType: callType,\n            parts: parts,\n            currCall: currCall,\n            type: dialog_1.EventType[type],\n        }));\n    }\n};\n"},"sourceMaps":{"js":{"version":3,"file":"trace.js","sourceRoot":"","sources":["../../../node_modules/one-gadget-voice/src/trace.ts"],"names":[],"mappings":";;AAAA,mCAA4C;AAE5C;;;GAGG;AACU,QAAA,UAAU,GAAG,UACxB,KAAY,EACZ,QAAkB;IAAlB,yBAAA,EAAA,aAAkB;IAGhB,IAAA,iBAAI,EAAE,eAAsB,EAAd,cAAI,EAAE,kBAAQ,CACpB;IAEV,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC/B,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;QACb,OAAO,CAAC,KAAK,CACX,wBAAwB,EACxB,IAAI,CAAC,SAAS,CAAC;YACb,MAAM,QAAA;YACN,QAAQ,UAAA;SACT,CAAC,CACH,CAAC;KACH;SAAM;QACL,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAChC,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,YAAY,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;QAC9C,KAA8C,UAAY,EAAZ,6BAAY,EAAZ,0BAAY,EAAZ,IAAY,EAAE;YAAjD,IAAA,uBAA+B,EAA7B,iBAAa,EAAE,8BAAY;YACtC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,QAAA,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;SACtC;QAED,OAAO,CAAC,KAAK,CACX,wBAAwB,EACxB,IAAI,CAAC,SAAS,CAAC;YACb,MAAM,QAAA;YACN,KAAK,OAAA;YACL,QAAQ,UAAA;YACR,QAAQ,UAAA;YACR,KAAK,OAAA;YACL,QAAQ,UAAA;YACR,IAAI,EAAE,kBAAS,CAAC,IAAI,CAAC;SACtB,CAAC,CACH,CAAC;KACH;AACH,CAAC,CAAC","sourcesContent":["import { Event, EventType } from './dialog';\r\n\r\n/**\r\n * Debug utility to log event data \r\n * @param event \r\n */\r\nexport const traceEvent = (\r\n  event: Event,\r\n  currCall: any = {},\r\n) => {\r\n  const {\r\n    type, data: { user, dialog },\r\n  } = event;\r\n\r\n  const ustate = user.getState();\r\n  if (!(dialog)) {\r\n    console.debug(\r\n      'gadget-voice-trace: %s',\r\n      JSON.stringify({\r\n        ustate,\r\n        currCall,\r\n      }),\r\n    );\r\n  } else {\r\n    const state = dialog.getState();\r\n    const dialogId = dialog.getId();\r\n    const callType = dialog.getCallType();\r\n\r\n    const parts = [];\r\n    const participants = dialog.getParticipants();\r\n    for (const { state: pstate, mediaAddress } of participants) {\r\n      parts.push({ pstate, mediaAddress });\r\n    }\r\n\r\n    console.debug(\r\n      'gadget-voice-trace: %s',\r\n      JSON.stringify({\r\n        ustate,\r\n        state,\r\n        dialogId,\r\n        callType,\r\n        parts,\r\n        currCall,\r\n        type: EventType[type],\r\n      }),\r\n    );\r\n  }\r\n};\r\n"]}},"error":null,"hash":"ac9bb98409c0bd970a4ed9ac6a250b82","cacheData":{"env":{}}}
{"id":"Ql9A","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-trace/tsconfig.json","includedInParent":true,"mtime":1569550736074},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/unch-app-gadget/package.json","includedInParent":true,"mtime":1569550537782},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-trace/package.json","includedInParent":true,"mtime":1569550736073},{"name":"one-trace-logger","loc":{"line":3,"column":33},"parent":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-trace/src/trace.ts","resolved":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-trace-logger/index.ts"}],"generated":{"js":"\"use strict\";\nexports.__esModule = true;\nvar one_trace_logger_1 = require(\"one-trace-logger\");\nexports.enableTrace = function (key, options, cb) {\n    var log = options.log, settings = options.settings;\n    var _a = settings.trace, trace = _a === void 0 ? {} : _a;\n    var url = trace.url, users = trace.users;\n    if (users) {\n        for (var _i = 0, users_1 = users; _i < users_1.length; _i++) {\n            var user = users_1[_i];\n            if (user === key) {\n                if (cb) {\n                    cb(url);\n                }\n                else {\n                    if (log) {\n                        log.add(new one_trace_logger_1.TraceLogger(url, key));\n                    }\n                }\n                break;\n            }\n        }\n    }\n    // if (users.find((u: any) => (u === key))) {\n    //     if (cb) {\n    //         cb(url);\n    //     } else {\n    //         if (log) {\n    //             log.add(new TraceLogger(url, key));\n    //         }\n    //     }\n    // }\n};\n"},"sourceMaps":{"js":{"version":3,"file":"trace.js","sourceRoot":"","sources":["../../../node_modules/one-trace/src/trace.ts"],"names":[],"mappings":";;AAAA,qDAA+C;AAElC,QAAA,WAAW,GAAG,UACvB,GAAW,EACX,OAAY,EACZ,EAA0B;IAElB,IAAA,iBAAG,EAAE,2BAAQ,CAAa;IAC1B,IAAA,mBAAU,EAAV,+BAAU,CAAc;IACxB,IAAA,eAAG,EAAE,mBAAK,CAAW;IAE7B,IAAI,KAAK,EAAE;QACP,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAArB,IAAM,IAAI,cAAA;YACX,IAAI,IAAI,KAAK,GAAG,EAAE;gBACd,IAAI,EAAE,EAAE;oBACJ,EAAE,CAAC,GAAG,CAAC,CAAC;iBACX;qBAAM;oBACH,IAAI,GAAG,EAAE;wBACL,GAAG,CAAC,GAAG,CAAC,IAAI,8BAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;qBACtC;iBACJ;gBACD,MAAM;aACT;SACJ;KACJ;IAED,6CAA6C;IAC7C,gBAAgB;IAChB,mBAAmB;IACnB,eAAe;IACf,qBAAqB;IACrB,kDAAkD;IAClD,YAAY;IACZ,QAAQ;IACR,IAAI;AACR,CAAC,CAAA","sourcesContent":["import { TraceLogger } from 'one-trace-logger';\n\nexport const enableTrace = (\n    key: string,\n    options: any,\n    cb?: (url: string) => void) => {\n\n    const { log, settings } = options;\n    const { trace = {} } = settings;\n    const { url, users } = trace;\n\n    if (users) {\n        for (const user of users) {\n            if (user === key) {\n                if (cb) {\n                    cb(url);\n                } else {\n                    if (log) {\n                        log.add(new TraceLogger(url, key));\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    // if (users.find((u: any) => (u === key))) {\n    //     if (cb) {\n    //         cb(url);\n    //     } else {\n    //         if (log) {\n    //             log.add(new TraceLogger(url, key));\n    //         }\n    //     }\n    // }\n}\n"]}},"error":null,"hash":"020bb6f85e2baab7db778afb9d75a855","cacheData":{"env":{}}}
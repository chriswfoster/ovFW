{"id":"../../../node_modules/one-loader/src/settings.ts","dependencies":[{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-loader/tsconfig.json","includedInParent":true,"mtime":1569550736047},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/packages/unch-app-web/package.json","includedInParent":true,"mtime":1569550537783},{"name":"/Users/chriswf/Documents/Projects/unch-gadget/node_modules/one-loader/package.json","includedInParent":true,"mtime":1569550736046}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.settings = function (url, options) {\n    if (options === void 0) { options = {}; }\n    return (new Promise(function (resolve, reject) {\n        var _a = options.params, params = _a === void 0 ? {\n            cache: 'no-cache',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        } : _a;\n        // TODO: replace with abstracted server api\n        fetch(url, params).then(function (resp) {\n            var settings = resp.json();\n            resolve(settings);\n        }).catch(function (exp) {\n            var error = {\n                code: 'ONE-CORE:SETTINGS-NOT-ACCESSIBLE',\n                description: \"Unable to access \" + url,\n                context: {\n                    url: url,\n                    params: params,\n                    options: options,\n                },\n            };\n            reject(error);\n        });\n    }));\n};\n"},"sourceMaps":{"js":{"version":3,"file":"settings.js","sourceRoot":"","sources":["../../../node_modules/one-loader/src/settings.ts"],"names":[],"mappings":";;AAIa,QAAA,QAAQ,GAAG,UACpB,GAAW,EACX,OAAiB;IAAjB,wBAAA,EAAA,YAAiB;IAChB,OAAA,CACG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAChB,IAAA,mBAKP,EALO;;;;;cAKP,CAAa;QAEd,2CAA2C;QAC3C,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;YAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC7B,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACT,IAAM,KAAK,GAAU;gBACjB,IAAI,EAAE,kCAAkC;gBACxC,WAAW,EAAE,sBAAoB,GAAK;gBACtC,OAAO,EAAE;oBACL,GAAG,KAAA;oBACH,MAAM,QAAA;oBACN,OAAO,SAAA;iBACV;aACJ,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CACL;AA1BA,CA0BA,CAAC","sourcesContent":["declare const window: any;\n\nimport { Error } from 'one-core';\n\nexport const settings = (\n    url: string,\n    options: any = {},\n) => (\n        new Promise((resolve, reject) => {\n            const { params = {\n                cache: 'no-cache',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            } } = options;\n\n            // TODO: replace with abstracted server api\n            fetch(url, params).then((resp: any) => {\n                const settings = resp.json();\n                resolve(settings);\n            }).catch((exp) => {\n                const error: Error = {\n                    code: 'ONE-CORE:SETTINGS-NOT-ACCESSIBLE',\n                    description: `Unable to access ${url}`,\n                    context: {\n                        url,\n                        params,\n                        options,\n                    },\n                };\n                reject(error);\n            })\n        })\n    );"]}},"error":null,"hash":"a3eecd730f33da95a6cdb52885d05cbe","cacheData":{"env":{}}}
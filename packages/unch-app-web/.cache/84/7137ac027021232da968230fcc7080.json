{"id":"../../../node_modules/unch-app/src/store/map.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/unch-app-web/package.json","includedInParent":true,"mtime":1570193309168},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar initial = {\n    switch1: false,\n    switch2: false,\n    switch3: true,\n    switch4: false,\n    mapfilter: 'hospital'\n};\nexports.map = function (state, action) {\n    if (state === void 0) { state = initial; }\n    var updated = state;\n    var type = action.type, payload = action.payload;\n    switch (type) {\n        case 'MAP_FILTER':\n            {\n                updated = __assign({}, updated, payload);\n            }\n            break;\n        case 'ADD_MAP':\n            {\n                updated = __assign({}, updated, payload);\n            }\n            break;\n        case 'DELETE_MAP':\n            {\n                updated = {};\n            }\n            break;\n        case 'enable-hook-map':\n            {\n                updated = __assign({}, updated, { 'initmaploop': payload });\n            }\n            break;\n        default:\n    }\n    return updated;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"map.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/store/map.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAM,OAAO,GAAQ;IACnB,OAAO,EAAG,KAAK;IACf,OAAO,EAAG,KAAK;IACf,OAAO,EAAG,IAAI;IACd,OAAO,EAAG,KAAK;IACf,SAAS,EAAG,UAAU;CACvB,CAAC;AAEW,QAAA,GAAG,GAAG,UAAC,KAAe,EAAE,MAAM;IAAvB,sBAAA,EAAA,eAAe;IACnC,IAAI,OAAO,GAAG,KAAK,CAAC;IACZ,IAAA,kBAAI,EAAE,wBAAO,CAAY;IACjC,QAAQ,IAAI,EAAE;QACd,KAAK,YAAY;YAAG;gBAChB,OAAO,gBACA,OAAO,EACP,OAAO,CACb,CAAC;aAEL;YACC,MAAM;QACN,KAAK,SAAS;YAAG;gBACf,OAAO,gBACA,OAAO,EACP,OAAO,CACb,CAAC;aAEL;YACC,MAAM;QACN,KAAK,YAAY;YAAG;gBAChB,OAAO,GAAG,EAET,CAAA;aACJ;YACC,MAAM;QACN,KAAK,iBAAiB;YAAG;gBACvB,OAAO,gBACF,OAAO,IACV,aAAa,EAAE,OAAO,GACvB,CAAA;aACJ;YACC,MAAM;QACR,QAAQ;KACT;IACD,OAAO,OAAO,CAAC;AACf,CAAC,CAAC","sourcesContent":["const initial: any = {\n  switch1 : false,\n  switch2 : false,\n  switch3 : true,\n  switch4 : false,\n  mapfilter : 'hospital'\n};\n\nexport const map = (state = initial, action) => {\nlet updated = state;\nconst { type, payload } = action;\nswitch (type) {\ncase 'MAP_FILTER' : {\n    updated = {\n        ...updated,\n        ...payload\n    };\n    \n}\n  break;\n  case 'ADD_MAP' : {\n    updated = {\n        ...updated,\n        ...payload\n    };\n    \n}\n  break;\n  case 'DELETE_MAP' : {\n      updated = {\n          \n      }\n  }\n    break;\n    case 'enable-hook-map' : {\n      updated = {\n        ...updated,\n        'initmaploop': payload\n      }\n  }\n    break;\n  default:\n}\nreturn updated;\n};\n"]}},"error":null,"hash":"721b9c381316199af6adad71fd735e58","cacheData":{"env":{}}}
{"id":"../../../node_modules/unch-app/src/store/screenpop/src/reducer.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/tsconfig.json","includedInParent":true,"mtime":1570193309185},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/unch-app-web/package.json","includedInParent":true,"mtime":1570193309168},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/unch-app/package.json","includedInParent":true,"mtime":1570193309170}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Types;\n(function (Types) {\n    Types[\"SET\"] = \"one-screenpop-set\";\n    Types[\"RESET\"] = \"one-screenpop-reset\";\n})(Types = exports.Types || (exports.Types = {}));\n;\nvar initial = {\n    active: false,\n    dnis: undefined,\n};\nexports.screenpop = function (context) {\n    var log = context.log;\n    return function (state, action) {\n        if (state === void 0) { state = initial; }\n        console.debug('screenpop', action);\n        var updated = state;\n        var type = action.type, payload = action.payload;\n        var active = false;\n        var screenpopmsg = '';\n        if (payload && payload === 'Patient_Request_Sent_Successfully') {\n            active = true;\n            screenpopmsg = 'Epic Screen pop to the Patient Chart is successfully initiated';\n        }\n        else {\n            active = true;\n            screenpopmsg = 'Epic Screenpop failed. Please make sure you are connected to the Snap Adapter';\n        }\n        switch (type) {\n            case Types.SET:\n                updated = __assign({}, updated, { active: active, screenpopmsg: screenpopmsg });\n                break;\n            case Types.RESET:\n                updated = initial;\n                break;\n        }\n        return updated;\n    };\n};\n"},"sourceMaps":{"js":{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../node_modules/unch-app/src/store/screenpop/src/reducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,IAAY,KAGX;AAHD,WAAY,KAAK;IACf,kCAAyB,CAAA;IACzB,sCAA6B,CAAA;AAC/B,CAAC,EAHW,KAAK,GAAL,aAAK,KAAL,aAAK,QAGhB;AAAA,CAAC;AAOF,IAAM,OAAO,GAAQ;IACnB,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,SAAS;CAChB,CAAC;AAEW,QAAA,SAAS,GAAG,UAAC,OAAY;IAC5B,IAAA,iBAAG,CAAa;IACxB,OAAO,UAAC,KAA+B,EAAE,MAAqB;QAAtD,sBAAA,EAAA,eAA+B;QACnC,OAAO,CAAC,KAAK,CACT,WAAW,EAAE,MAAM,CACtB,CAAC;QAEF,IAAI,OAAO,GAAG,KAAK,CAAC;QACZ,IAAA,kBAAI,EAAE,wBAAO,CAAY;QACjC,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAG,OAAO,IAAI,OAAO,KAAK,mCAAmC,EAAC;YAC5D,MAAM,GAAG,IAAI,CAAC;YACd,YAAY,GAAG,gEAAgE,CAAA;SAChF;aAAI;YACH,MAAM,GAAG,IAAI,CAAC;YACd,YAAY,GAAG,+EAA+E,CAAA;SAC/F;QAED,QAAQ,IAAI,EAAE;YACV,KAAK,KAAK,CAAC,GAAG;gBACV,OAAO,gBACA,OAAO,IACV,MAAM,EAAE,MAAM,EACd,YAAY,EAAE,YAAY,GAC7B,CAAC;gBACF,MAAM;YAEV,KAAK,KAAK,CAAC,KAAK;gBACZ,OAAO,GAAG,OAAO,CAAC;gBAClB,MAAM;SACb;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAA;AACH,CAAC,CAAA","sourcesContent":["\nexport enum Types {\n  SET = 'one-screenpop-set',\n  RESET = 'one-screenpop-reset',\n};\n\nexport interface Action<T, P = any> {\n  type: T,\n  payload: P,\n}\n\nconst initial: any = {\n  active: false,\n  dnis: undefined,\n};\n\nexport const screenpop = (context: any) => {\n  const { log } = context;\n  return (state: typeof initial = initial, action: Action<Types>) => {\n      console.debug (\n          'screenpop', action,\n      );\n\n      let updated = state;\n      const { type, payload } = action;\n      let active = false;\n      let screenpopmsg = '';\n      if(payload && payload === 'Patient_Request_Sent_Successfully'){\n        active = true;\n        screenpopmsg = 'Epic Screen pop to the Patient Chart is successfully initiated'\n      }else{\n        active = true;\n        screenpopmsg = 'Epic Screenpop failed. Please make sure you are connected to the Snap Adapter'\n      }\n\n      switch (type) {\n          case Types.SET:\n              updated = {\n                  ...updated,\n                  active: active,\n                  screenpopmsg: screenpopmsg\n              };\n              break;\n\n          case Types.RESET:\n              updated = initial;\n              break;\n      }\n      return updated;\n  }\n}\n"]}},"error":null,"hash":"ee46d0fd69614668890ce4dac0164800","cacheData":{"env":{}}}
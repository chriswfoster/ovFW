{"id":"../../../node_modules/one-state-hotkeys/src/reducer.ts","dependencies":[{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/one-state-hotkeys/tsconfig.json","includedInParent":true,"mtime":1570193615893},{"name":"/Users/user/Documents/Projects/ssob/ovFW/packages/unch-app-web/package.json","includedInParent":true,"mtime":1570193309168},{"name":"/Users/user/Documents/Projects/ssob/ovFW/node_modules/one-state-hotkeys/package.json","includedInParent":true,"mtime":1570193615892}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar Types;\n(function (Types) {\n    Types[\"SET\"] = \"one-hotkey-set\";\n    Types[\"RESET\"] = \"one-hotkey-reset\";\n})(Types = exports.Types || (exports.Types = {}));\n;\nvar initial = {\n    active: false,\n    dnis: undefined\n};\nexports.reducer = function (context) {\n    var log = context.log;\n    return function (state, action) {\n        if (state === void 0) { state = initial; }\n        console.debug('hotkeys', action);\n        var updated = state;\n        var type = action.type, payload = action.payload;\n        switch (type) {\n            case Types.SET:\n                updated = __assign({}, payload);\n                break;\n            case Types.RESET:\n                updated = initial;\n                break;\n        }\n        return updated;\n    };\n};\n"},"sourceMaps":{"js":{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../node_modules/one-state-hotkeys/src/reducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,IAAY,KAGX;AAHD,WAAY,KAAK;IACb,+BAAsB,CAAA;IACtB,mCAA0B,CAAA;AAC9B,CAAC,EAHW,KAAK,GAAL,aAAK,KAAL,aAAK,QAGhB;AAAA,CAAC;AAOF,IAAM,OAAO,GAAQ;IACjB,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,SAAS;CAClB,CAAC;AAEW,QAAA,OAAO,GAAG,UAAC,OAAY;IACxB,IAAA,iBAAG,CAAa;IACxB,OAAO,UAAC,KAA+B,EAAE,MAAqB;QAAtD,sBAAA,EAAA,eAA+B;QACnC,OAAO,CAAC,KAAK,CACT,SAAS,EAAE,MAAM,CACpB,CAAC;QAEF,IAAI,OAAO,GAAG,KAAK,CAAC;QACZ,IAAA,kBAAI,EAAE,wBAAO,CAAY;QAEjC,QAAQ,IAAI,EAAE;YACV,KAAK,KAAK,CAAC,GAAG;gBACV,OAAO,gBACA,OAAO,CACb,CAAC;gBACF,MAAM;YAEV,KAAK,KAAK,CAAC,KAAK;gBACZ,OAAO,GAAG,OAAO,CAAC;gBAClB,MAAM;SACb;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAA;AACL,CAAC,CAAA","sourcesContent":["\nexport enum Types {\n    SET = 'one-hotkey-set',\n    RESET = 'one-hotkey-reset',\n};\n\nexport interface Action<T, P = any> {\n    type: T,\n    payload: P,\n}\n\nconst initial: any = {\n    active: false,\n    dnis: undefined,\n};\n\nexport const reducer = (context: any) => {\n    const { log } = context;\n    return (state: typeof initial = initial, action: Action<Types>) => {\n        console.debug (\n            'hotkeys', action,\n        );\n\n        let updated = state;\n        const { type, payload } = action;\n\n        switch (type) {\n            case Types.SET:\n                updated = {\n                    ...payload,\n                };\n                break;\n\n            case Types.RESET:\n                updated = initial;\n                break;\n        }\n        return updated;\n    }\n}\n"]}},"error":null,"hash":"e7c5d6aac9f1ef375a138f069ab03d3d","cacheData":{"env":{}}}